<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hongyonghan</title>
  
  <subtitle>行到水穷处 坐看云起时</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hongyonghan.github.io/"/>
  <updated>2019-09-05T03:07:43.396Z</updated>
  <id>https://hongyonghan.github.io/</id>
  
  <author>
    <name>hongyong han</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数学建模之Fisher判别</title>
    <link href="https://hongyonghan.github.io/post/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E4%B9%8BFisher%E5%88%A4%E5%88%AB/"/>
    <id>https://hongyonghan.github.io/post/数学建模之Fisher判别/</id>
    <published>2019-09-03T17:03:44.000Z</published>
    <updated>2019-09-05T03:07:43.396Z</updated>
    
    <content type="html"><![CDATA[   <a id="more"></a><pre><code>理论，编程步骤和优缺点</code></pre><p>1.理论<br>判别分析是用于判别个体所属群体的一种统计方法，判别分析的特点是根据已掌握的、历史上每个类别的若干样本的数据信息，总结出客观事物分类的规律性，建立判别公式和判别准则。然后，当遇到新的样本点时，只要根据总结出来的判别公式和判别准则，就能判别该样本点所属的类别。判别分析是一种应用性很强的统计数据分析方法。</p><p>Fisher判别<br>（1）借助方差分析的思想构造一个线性判别函数：<br>（2）确定判别函数系数时要求使得总体之间区别最大，而使每个总体内部的离差最小。<br>（3）从几何的角度看，判别函数就是p维向量X在某种方向上的投影。使得变换后的数据同类别的点“尽可能聚在一起”，不同类别的点“尽可能分离”，以此达到分类的目的。<br>           两类Fisher判别示意图 </p><p>（1）如果有多个类别， Fisher判别可能需要两个或者更多的判别函数才能完成分类。<br>（2）一般来说判别函数的个数等于分类的个数减一。<br>（3）得到判别函数后，计算待判样品的判别函数值，根据判别函数的值计算待判样品到各类的重心的距离，从而完成分类。<br>2.编程步骤</p><p>① 把来自两类的训练样本集分成和两个子集和。<br>② 由，，计算。<br>③ 由计算各类的类内离散度矩阵，。<br>④ 计算类内总离散度矩阵。<br>⑤ 计算的逆矩阵。<br>⑥ 由求解。<br>3.优点<br>（1）一般对于线性可分的样本，总能找到一个投影方向，使得降维后的样本仍然线性可分，而且可分性更好即不同类别的样本之间的距离竟可能的远，同一类别的尽可能的集中分布。<br>（2）Fisher方法可以直接求解法向量。<br>（3）Fisher的线性判别不仅适用于确定性的模式分类器的训练，而且对于随机的模机也是适用的，Fisher还可以推广到多类问题中去。<br>缺点<br>（1）如果M1=M2,W=0.则这样的样本线性不可分；M1！=M2，未必线性可分；SW不可逆，未必不可分。<br>（2）对于线性不可分的情况，Fisher方法无法确定分类。<br>程序如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">clear% w1类训练样本，10组，每组为行向量。</span><br><span class="line">w1=[-0.4,0.58,0.089;-0.31,0.27,-0.04;-0.38,0.055,-0.035;-0.15,0.53,0.011;-0.35,0.47,0.034;0.17,0.69,0.1;-0.011,0.55,-0.18;-0.27,0.61,0.12;-0.065,0.49,0.0012;-0.12,0.054,-0.063]; </span><br><span class="line">% w2类训练样本，10组，每组为行向量。</span><br><span class="line">w2=[0.83,1.6,-0.014;1.1,1.6,0.48;-0.44,-0.41,0.32;0.047,-0.45,1.4;0.28,0.35,3.1;-0.39,-0.48,0.11;0.34,-0.079,0.14;-0.3,-0.22,2.2;1.1,1.2,-0.46;0.18,-0.11,-0.49]; </span><br><span class="line">%w1=load(&apos;xxx1.txt&apos;);</span><br><span class="line">%w2=load(&apos;xxx2.txt&apos;);</span><br><span class="line">xx1=[-0.7,0.58,0.089]&apos;;  </span><br><span class="line">%测试数据xx1，为列向量。</span><br><span class="line">xx2=[0.047,-0.4,1.04]&apos;;  </span><br><span class="line">%测试数据xx2，为列向量。</span><br><span class="line">m1=mean(w1,1)&apos;;  </span><br><span class="line">% w1类样本均值向量，为列向量</span><br><span class="line">sw1=cov(w1,1);   </span><br><span class="line">% w1类样本类内离散度矩阵</span><br><span class="line">m2=mean(w2,1)&apos;;  </span><br><span class="line">% w2类样本均值向量，为列向量</span><br><span class="line">sw2=cov(w2,1);   </span><br><span class="line">% w2类样本类内离散度矩阵</span><br><span class="line">sw=sw1+sw2;      </span><br><span class="line">%总类内离散度矩阵</span><br><span class="line">w= inv(sw)*(m1-m2);  </span><br><span class="line">%投影方向</span><br><span class="line">y0=(w&apos;*m1+w&apos;*m2)/2;  </span><br><span class="line">%阈值y0</span><br><span class="line">figure(1) </span><br><span class="line">for i=1:10  </span><br><span class="line">    plot3(w1(i,1),w1(i,2),w1(i,3),&apos;g+&apos;) </span><br><span class="line">    hold on</span><br><span class="line">    plot3(w2(i,1),w2(i,2),w2(i,3),&apos;ro&apos;) </span><br><span class="line">end</span><br><span class="line">xlabel(&apos;x轴&apos;); </span><br><span class="line">ylabel(&apos;y&apos;);  </span><br><span class="line">title(&apos;原始训练数据w1,w2三维分布图&apos;); </span><br><span class="line">z1=w&apos;*w1&apos;; </span><br><span class="line">z2=w&apos;*w2&apos;; </span><br><span class="line">figure(2) </span><br><span class="line">for i=1:10  </span><br><span class="line">    plot3(z1(i)*w(1),z1(i)*w(2),z1(i)*w(3),&apos;g+&apos;) </span><br><span class="line">    hold on</span><br><span class="line">    plot3(z2(i)*w(1),z2(i)*w(2),z2(i)*w(3),&apos;ro&apos;)  </span><br><span class="line">end</span><br><span class="line">xlabel(&apos;x轴&apos;); </span><br><span class="line">ylabel(&apos;y轴&apos;);  </span><br><span class="line">title(&apos;训练数据w1,w2线性分类效果图&apos;); </span><br><span class="line">hold off</span><br><span class="line">y1=w&apos;*xx1; </span><br><span class="line">if y1&gt;y0  </span><br><span class="line">   fprintf(&apos;测试数据xx1属于w1类\n&apos;); </span><br><span class="line">else</span><br><span class="line">   fprintf(&apos;测试数据xx1属于w2类\n&apos;); </span><br><span class="line">end</span><br><span class="line">y2=w&apos;*xx2; </span><br><span class="line">if y2&gt;y0  </span><br><span class="line">   fprintf(&apos;测试数xx2属于w1类\n&apos;); </span><br><span class="line">else</span><br><span class="line">   fprintf(&apos;测试数据xx2属于w2类\n&apos;); </span><br><span class="line">end</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">clear   </span><br><span class="line">% w1类训练样本，10组，每组为行向量。</span><br><span class="line"></span><br><span class="line">w1=[-0.4,0.58,0.089;-0.31,0.27,-0.04;-0.38,0.055,-0.035;-0.15,0.53,0.011;-0.35,0.47,0.034;0.17,0.69,0.1;-0.011,0.55,0.18;-0.27,0.61,0.12;-0.065,0.49,0.0012;-0.12,0.054,-0.063]; </span><br><span class="line"></span><br><span class="line">% w2类训练样本，10组，每组为行向量。</span><br><span class="line">w2=[0.83,1.6,-0.014;1.1,1.6,0.48;-0.44,-0.41,0.32;0.047,-0.45,1.4;0.28,0.35,3.1; -0.39,-0.48,0.11;0.34,-0.079,0.14;-0.3,-0.22,2.2;1.1,1.2,-0.46;0.18,-0.11,-0.49]; </span><br><span class="line">% w3为待分类样本数据，10组，每组为列向量。</span><br><span class="line">w3=[1.58,2.32,-5.8;0.67,1.58,-4.78;1.04,1.01,-3.63;-1.49,2.18,-3.39;-0.41,1.21,-4.73;1.39,3.61,2.87;1.2,1.4,-1.89;-0.92,1.44,-3.22;0.45,1.33,-4.38;-0.76,0.84,-1.96]&apos;; </span><br><span class="line">m1=mean(w1,1)&apos;;  </span><br><span class="line">% w1类样本均值向量，为列向量</span><br><span class="line">sw1=cov(w1,1);   </span><br><span class="line">% w1类样本类内离散度矩阵</span><br><span class="line">m2=mean(w2,1)&apos;;  </span><br><span class="line">% w2类样本均值向量，为列向量</span><br><span class="line">sw2=cov(w2,1);   </span><br><span class="line">% w2类样本类内离散度矩阵</span><br><span class="line">sw=sw1+sw2;      </span><br><span class="line">%总类内离散度矩阵</span><br><span class="line">w= inv(sw)*(m1-m2);  </span><br><span class="line">%投影方向</span><br><span class="line">y0=(w&apos;*m1+w&apos;*m2)/2  </span><br><span class="line">%阈值y0</span><br><span class="line">% w1,w2,w3原始数据三维分布图</span><br><span class="line">figure(3) </span><br><span class="line">for i=1:10  </span><br><span class="line">    plot3(w1(i,1),w1(i,2),w1(i,3),&apos;g+&apos;) </span><br><span class="line">    hold on</span><br><span class="line">    plot3(w2(i,1),w2(i,2),w2(i,3),&apos;ro&apos;) </span><br><span class="line">    hold on</span><br><span class="line">    plot3(w3(1,i),w3(2,i),w3(3,i),&apos;bp&apos;) </span><br><span class="line">end</span><br><span class="line">xlabel(&apos;x轴&apos;); </span><br><span class="line">ylabel(&apos;y轴&apos;);  </span><br><span class="line">title(&apos;训练w1,w2/样本w3原始数据三维分布图&apos;);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">% w1,w2,w3数据线性投影分类效果图</span><br><span class="line">z1=w&apos;*w1&apos;; </span><br><span class="line">z2=w&apos;*w2&apos;; </span><br><span class="line">z3=w&apos;*w3; </span><br><span class="line">figure(4) </span><br><span class="line">for i=1:10  </span><br><span class="line">    plot3(z1(i)*w(1),z1(i)*w(2),z1(i)*w(3),&apos;g+&apos;) </span><br><span class="line">    hold on</span><br><span class="line">    plot3(z2(i)*w(1),z2(i)*w(2),z2(i)*w(3),&apos;ro&apos;) </span><br><span class="line">    hold on</span><br><span class="line">    plot3(z3(i)*w(1),z3(i)*w(2),z3(i)*w(3),&apos;bp&apos;) </span><br><span class="line">end</span><br><span class="line">xlabel(&apos;x轴&apos;); </span><br><span class="line">ylabel(&apos;y轴&apos;);  </span><br><span class="line">title(&apos;训练w1,w2/样本w3数据线性投影分类效果图&apos;); </span><br><span class="line">hold off</span><br><span class="line">for i=1:10  </span><br><span class="line">    y(i)=w&apos;*w3(:,i); </span><br><span class="line">      if  y(i)&gt;y0  </span><br><span class="line">          fprintf(&apos;样本数据%d属于w1类\n&apos;,i); </span><br><span class="line">      else</span><br><span class="line">          fprintf(&apos;样本数据%d属于w2类\n&apos;,i);</span><br><span class="line">      end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
           &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;pre&gt;&lt;code&gt;理论，编程步骤和优缺点&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;1.理论&lt;br&gt;判别分析是用于判别个体所属群体的一种统计方法，判别分析的特点是根据已掌握的、历史上每个类别的若干样本的数据信息，总结出客观事物分类的规律性，建立
      
    
    </summary>
    
    
      <category term="数学建模  Fisher判别" scheme="https://hongyonghan.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1-Fisher%E5%88%A4%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>数学建模之蒙特卡罗方法</title>
    <link href="https://hongyonghan.github.io/post/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E4%B9%8B%E8%92%99%E7%89%B9%E5%8D%A1%E7%BD%97%E6%96%B9%E6%B3%95/"/>
    <id>https://hongyonghan.github.io/post/数学建模之蒙特卡罗方法/</id>
    <published>2019-09-03T17:03:44.000Z</published>
    <updated>2019-09-05T03:08:36.636Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>主要解决仿真模拟的问题。</p><h4 id="什么是蒙特卡罗方法。"><a href="#什么是蒙特卡罗方法。" class="headerlink" title="什么是蒙特卡罗方法。"></a>什么是蒙特卡罗方法。</h4><ul><li><p>蒙特卡罗方法又称为统计模拟法、随机抽样技术，是一种随机模拟方法，<strong>以概率和统计理论方法为基础的一种计算方法，是使用随机数或者伪随机数来解决很多计算问题的方法</strong>。将所求解的问题同一定的概率模型相联系，用电子计算机实现统计模拟或抽样，以获得问题的近似解。</p><h4 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h4></li><li><p>当所求的问题的解是某个事件的<strong>概率</strong>，或者是某个随机变量的<strong>数学期望</strong>，或者是<strong>与概率，数学期望有关的量时，</strong>通过某种试验的方法，得到该事件发生的<strong>概率</strong>,或者该随机变量若干个具体观察值的<strong>算术平方根</strong>，通过它得到问题的解。</p></li><li><p>当随机变量的取值仅为1或者0时，他的数学期望就是某个事件的概率。或者说某种事件的概率也是随机变量（仅取值1或者0）的数学期望。<br><img src="https://img-blog.csdnimg.cn/20190823103336983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>例如上图所示，可以通过大量的随机模拟投掷来得到每个区域的概率。这样就可以转化到随机边界或者不定边界的问题。例如下图，可以求解具体A、B两个图形的面积。将求解面积的问题转化成求解概率的问题。<br><img src="https://img-blog.csdnimg.cn/20190823103541160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="蒙特卡洛方法的特点"><a href="#蒙特卡洛方法的特点" class="headerlink" title="蒙特卡洛方法的特点"></a>蒙特卡洛方法的特点</h4><p>优点：</p></li><li><p>能够比较逼真地描述具有随机性质的事物的特点及物理实验过程。</p></li><li><p>受几何条件限制小</p></li><li><p>收敛速度与问题的维数无关</p></li><li><p>具有同时计算多个方案与多个未知量的能力</p></li><li><p>误差容易确定</p></li><li><p>程序结构简单，易于实现。<br>缺点：</p></li><li><p>收敛速度慢，耗时比较多</p></li><li><p>误差具有概率性</p></li><li><p>在粒子输运问题中，计算结果与系统大小有关。</p></li></ul><p><strong>所以在使用蒙特卡洛方法的时候，要扬长避短，只对问题中难以使用解析（或者数值）方法处理的部分使用蒙塔卡罗方法，对那些能使用解析解处理的方法要尽量使用解析方法</strong></p><h4 id="主要应用范围："><a href="#主要应用范围：" class="headerlink" title="主要应用范围："></a>主要应用范围：</h4><ul><li>粒子输运问题（实验物理，反应堆物理）</li><li>统计物理</li><li>典型数学问题</li><li>真空技术</li><li>激光技术</li><li>医学</li><li>生物</li><li>探矿等<h4 id="什么是随机数"><a href="#什么是随机数" class="headerlink" title="什么是随机数"></a>什么是随机数</h4></li><li>在连续型随机变量的分布中，最简单而且最基本的分布是单位均匀分布。由该分布抽取的简单子样称为随机数序列，其中每一个体称为随机数</li><li>符号：<br><img src="https://img-blog.csdnimg.cn/20190823105016371.png" alt="在这里插入图片描述"></li><li>两个特点：独立性和均匀性<br>产生随机数：<br>随机数表：<ul><li>随机数表是由0123456789十个数字组成，每个数字以0.1的等概率出现，数字之间相互独立，这些数字序列叫做随机数序列。</li></ul></li><li>如果要得到n位有效数字的随机数。只需要将表中每n个相邻的随机数字合并在一起，且在最高位的前边加上小数点即可。例如，某随机数表的第一行数字为7 6 3 4 2 5 8 9 1 ，要想得到三位有效数字的随机数一次为0.763 0.425 0.891 .。。。如果是四位：则0.7634 0.2589.。。。</li></ul><p>物理方法：</p><ul><li><p>利用某些物理现象，在计算机上增加些特殊设备，可以在计算机上直接产生随机数。</p></li><li><p>作为随机数发生器的物理源主要有两种：一种是根据放射性物质的放射性，另一种是利用计算机的固有噪声。</p></li><li><p>一般情况下，任意一个随机数在计算机内总是用二进制的数表示的：<br><img src="https://img-blog.csdnimg.cn/20190823110403939.png" alt="在这里插入图片描述"><br>其中  <img src="https://img-blog.csdnimg.cn/20190823110347983.png" alt="在这里插入图片描述">    或者为0，或者为1。因此，利用物理方法在计算机产生随机数，就是要产生只取0或1的随机数字序列，数字之间相互独立，每个数字取0或1的概率均为0.5<br>缺点：</p></li><li><p>随机数表需在计算机中占有很大内存，而且也难以满足蒙特卡罗方法对随机数需要量非常大的要求，因此，该方法不适于在计算机上使用。</p></li><li><p>物理方法产生的随机数序列无法重复实现，不能进行程序复算。给验证结果带来很大困难。而且增加随机数发生器和电路联接等附加设备，费用昂贵。因此该方法也不适合在计算机上使用。</p><h4 id="伪随机数"><a href="#伪随机数" class="headerlink" title="伪随机数"></a>伪随机数</h4><p>用递推公式<br><img src="https://img-blog.csdnimg.cn/20190823110600634.png" alt="在这里插入图片描述"><br>产生随机数列：<br><img src="https://img-blog.csdnimg.cn/20190823110629993.png" alt="在这里插入图片描述"><br>伪随机数存在的两个问题：</p><ul><li><p>递推公式和初始值确定后，整个随机数序列便被唯一确定。不满足随机数相互独立的要求。</p></li><li><p>由于随机数序列是由递推公式确定的，而在计算机上所能表示的【0，1】上的数又是有限的，因此，这种方法产生的随机数序列就不可能不出现重复。随机数序列出现周期性的循环现象。<br>解决方法：</p></li><li><p>不能从本质上加以改变，但只要递推公式选的比较好，随机数间的相互独立性是可以近似满足的。</p></li><li><p>因为使用蒙塔卡罗方法解任何具体问题时，所使用的随机数的个数总是有限的，只要所使用的随机数的个数不超过伪随机数序列出现循环现象时的长度就可以了。</p><h4 id="应用：蒙塔卡罗方法计算积分"><a href="#应用：蒙塔卡罗方法计算积分" class="headerlink" title="应用：蒙塔卡罗方法计算积分"></a>应用：蒙塔卡罗方法计算积分</h4><p>可以通俗地说，蒙特卡罗方法是用随机试验的方法计算积分，即将所要计算的积分看作服从某种分布密度函数f(r)的随机变量ｇ(r)的数学期望 。<br><img src="https://img-blog.csdnimg.cn/20190823111817508.png" alt="在这里插入图片描述"><br>通过某种试验，得到Ｎ观察值r1，r2，…，rN（用概率语言来说，从分布密度函数f(r)中抽取Ｎ个子样r1，r2，…，rN，），将相应的Ｎ个随机变量的值g(r1)，g(r2)，…，g(rN)的算术平均值<br><img src="https://img-blog.csdnimg.cn/20190823111918202.png" alt="在这里插入图片描述"><br>例：求0-b的积分（求面积）：<br><img src="https://img-blog.csdnimg.cn/20190823112222832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>那么这个积分是否可以用一个近似的长方形来表示呢？是可以的<br><img src="https://img-blog.csdnimg.cn/20190823112700375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据中值定理一定有一个点b*f(x)=那个积分。<br><img src="https://img-blog.csdnimg.cn/20190823112741402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>积分问题可以抽象出一个高，这个高就是那个平均值。</p><h4 id="蒙特卡洛方法步骤如下："><a href="#蒙特卡洛方法步骤如下：" class="headerlink" title="蒙特卡洛方法步骤如下："></a>蒙特卡洛方法步骤如下：</h4><ul><li><p>1在区间[a,b]上利用计算机均匀产生n个随机数x1,x2…..xn，使用matlab软件的unifrnd命令实现。</p></li><li><p>2计算每一个随机数想对应的被积函数值f(x1),f(x2),f(xn)</p></li><li><p>计算被积函数值的平均值。<br><img src="https://img-blog.csdnimg.cn/20190823170738421.png" alt="在这里插入图片描述"></p></li><li><p>4原式约等于</p></li><li><p><img src="https://img-blog.csdnimg.cn/2019082317082535.png" alt="在这里插入图片描述"></p><h4 id="蒙特卡罗方法：随机投点试验求近似解"><a href="#蒙特卡罗方法：随机投点试验求近似解" class="headerlink" title="蒙特卡罗方法：随机投点试验求近似解"></a>蒙特卡罗方法：随机投点试验求近似解</h4><p>例子：<br>给定曲线y =2 – x2 和曲线y3 = x2，曲线的交点为：P1( – 1，1 )、P2( 1，1 )。曲线围成平面有限区域，用蒙特卡罗方法计算区域面积。<br><img src="https://img-blog.csdnimg.cn/20190823171302220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ul></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">P=rand(10000,2);</span><br><span class="line">x=2*P(:,1)-1;</span><br><span class="line">y=2*P(:,2);</span><br><span class="line">II=find(y&lt;=2-x.^2&amp;y.^3&gt;=x.^2);</span><br><span class="line">M=length(II);</span><br><span class="line">S=4*M/10000</span><br><span class="line">plot(x(II),y(II),&apos;g.&apos;)</span><br></pre></td></tr></table></figure><p>例5.14  计算       <img src="https://img-blog.csdnimg.cn/20190823171422538.png" alt="在这里插入图片描述">其中D为y= x – 2与y2 = x 所围D的边界曲线交点为：(–1，1)，(4，2)，被积函数在求积区域内的最大值为16。积分值是三维体积，该三维图形位于立方体区域<br>0≤ x ≤4，–1≤ y ≤2，0 ≤ z ≤16<br>内，立方体区域的体积为192。 <img src="https://img-blog.csdnimg.cn/20190823171457318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data=rand(10000,3);</span><br><span class="line"> x=4*data(:,1);</span><br><span class="line"> y=-1+3*data(:,2);</span><br><span class="line"> z=16*data(:,3);</span><br><span class="line"> II=find(x&gt;=y.^2&amp;x&lt;=y+2&amp;z&lt;=x.*(y.^2));</span><br><span class="line"> M=length(II);</span><br><span class="line"> V=192*M/10000</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2019082317155387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">P=rand(10000,4);</span><br><span class="line">x=-1+2*P(:,1); y=-1+2*P(:,2);</span><br><span class="line">z=P(:,3);u=2*P(:,4);</span><br><span class="line">II=find(z&gt;sqrt(x.^2+y.^2)&amp;z&lt;=1&amp;u&lt;=x.^2+y.^2+z.^2);</span><br><span class="line">M=length(II);</span><br><span class="line">V=8*M/10000</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190823171622915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function icecream(m,n) </span><br><span class="line">if nargin==0,m=20;n=100;end</span><br><span class="line">t=linspace(0,2*pi,n);</span><br><span class="line">r=linspace(0,1,m);</span><br><span class="line">x=r&apos;*cos(t);y=r&apos;*sin(t);</span><br><span class="line">z1=sqrt(x.^2+y.^2);</span><br><span class="line">z2=1+sqrt(1+eps-x.^2-y.^2);</span><br><span class="line">X=[x;x];Y=[y;y];</span><br><span class="line">Z=[z1;z2];</span><br><span class="line">mesh(X,Y,Z)</span><br><span class="line">view(0,-18)</span><br><span class="line">colormap([0 0 1]),axis off</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190823171705649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x1=-1:0.1:1; </span><br><span class="line">y1=x1.^2.^(1/3); </span><br><span class="line">x2=1:-0.1:-1;</span><br><span class="line"> y2=2-x2.^2; </span><br><span class="line">fill([x1,x2],[y1,y2],&apos;g&apos;)</span><br><span class="line">axis off</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;主要解决仿真模拟的问题。&lt;/p&gt;
&lt;h4 id=&quot;什么是蒙特卡罗方法。&quot;&gt;&lt;a href=&quot;#什么是蒙特卡罗方法。&quot; class=&quot;headerlink&quot; title=&quot;什么是蒙特卡罗方法。&quot;&gt;&lt;/a&gt;什么是蒙特卡罗方法。&lt;/h4&gt;&lt;ul
      
    
    </summary>
    
    
      <category term="数学建模  蒙特卡罗方法" scheme="https://hongyonghan.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1-%E8%92%99%E7%89%B9%E5%8D%A1%E7%BD%97%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>数学建模之粒子群（鸟群算法）算法</title>
    <link href="https://hongyonghan.github.io/post/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E4%B9%8B%E7%B2%92%E5%AD%90%E7%BE%A4%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/"/>
    <id>https://hongyonghan.github.io/post/数学建模之粒子群算法详解/</id>
    <published>2019-09-03T16:03:44.000Z</published>
    <updated>2019-09-05T03:08:18.648Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><p>粒子群（鸟群算法）算法是典型的寻优算法。分为<strong>全局最优和局部最优。 基本思想</strong>：主要模拟自然界生物捕食的策略，群体迭代，粒子在解空间追随最优的例子进行搜索。是智能算法的一种。<br>算法特点：</p><ol><li>简单易行。</li><li>收敛速度快。</li><li>设置参数少。<br>一般的限制条件是当达到限制步数或者达到相应的准确度的时，粒子就会停止移动。<br>设想一个场景：一群鸟在随机搜索食物。<br>已知（假设）：</li><li>1.在这块区域里只有一块食物。</li><li>2.所有的鸟都不知道食物在哪。</li><li>3.但他们能感受到当前的位置离食物还有多远。<br>问题是：找到食物的最优策略是什么。<br>搜索目前离食物最近的鸟的周围区域，根据自己飞行经验判断食物的所在。<br><strong>PSO的基础:信息的社会共享</strong><h4 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h4></li><li>每个寻优的问题解都被想象成一只鸟，称为粒子。所有粒子都在一个D维空间进行搜索。</li><li>所有粒子都由一个fitness function 确定适应值以判断目前的位置好坏。</li><li>每一个粒子必须赋予记忆功能，能记住所搜寻到的最佳位置。</li><li>每一个粒子还有一个速度以决定飞行的距离和方向。这个速度根据它本身的飞行经验以及同伴的飞行经验进行动态的调整。<br>D维空间中，有N个粒子；<br>粒子i位置：xi=(xi1,xi2,…xiD)，将xi代入适应函数f(xi)求适应值；<br>粒子i速度：vi=(vi1,vi2,…viD)<br>粒子i个体经历过的最好位置：pbesti=(pi1,pi2,…piD)<br><img src="https://img-blog.csdnimg.cn/20190826224328321.png" alt="在这里插入图片描述"><br>以上规定位置变化的界限和速度变化的界限。速度过快或者过慢都会对粒子寻优产生影响。</li><li>粒子i的第d维速度更新公式：<br><img src="https://img-blog.csdnimg.cn/20190826224828249.png" alt="在这里插入图片描述"></li><li>粒子i的第d维位置更新公式：<br><img src="https://img-blog.csdnimg.cn/20190826224914715.png" alt="在这里插入图片描述"><br>变量含义：<br>vid ^k    —第k次迭代粒子i飞行速度矢量的第d维分量<br>xid^k  —第k次迭代粒子i位置矢量的第d维分量<br>c1,c2—加速度常数，调节学习最大步长<br>r1,r2—两个随机函数，取值范围[0，1]，以增加搜索随机性<br>w —惯性权重，非负数，调节对解空间的搜索范围<br><img src="https://img-blog.csdnimg.cn/2019082622565076.png" alt="在这里插入图片描述"><br>粒子速度更新公式包含三部分：<br>第一部分：粒子先前的速度。<br>第二部分：认知部分，表示粒子本身的思考，可以理解为粒子i当前位置与自己最好位置之间的距离。<br>第三部分：社会部分，表示粒子间的信息共享与合作，可以理解为粒子i当前位置与群体最好<br>算法基本流程： </li></ol><ul><li>1.初始化粒子群体（群体规模为n），包括随机位置和速度。<ul><li>2.根据fitness function ，评价每个粒子的适应度。</li><li>3.对每个粒子，将其当前适应值与其个体历史最佳位置（pbest）对应的适应值做<br>比较，如果当前的适应值更高，则将用当前位置更新历史最佳位置pbest。</li></ul></li><li>4.对每个粒子，将其当前适应值与全局最佳位置（gbest）对应的适应值做比较，</li><li>5.根据公式更新每个粒子的速度与位置。</li><li>6.如未满足结束条件，则返回步骤2,通常算法达到最大迭代次数     或者最佳适应度值的增量小于某个给定的阈值时算法停止。</li></ul><p><img src="https://img-blog.csdnimg.cn/20190827211744116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>粒子群算法的构成要素：</p><ul><li>群体大小m:m是一个整数。<br>如果m很小，陷入局部最优解的可能性很大。<br>如果m很大，PSO的优化能力很好，当群体数目增长到一定水平时候，再整长就不再有显著的作用。</li><li>权重因子：惯性因子 W 学习因子 c1、c2</li><li><img src="https://img-blog.csdnimg.cn/20190827213118570.png" alt="在这里插入图片描述"></li><li>粒子速度的更新主要由以下三部分组成。<br><img src="https://img-blog.csdnimg.cn/20190827213234343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果惯性因子w=1 则是基本粒子群算法 如果w=0的话，失去对粒子本身的速度的记忆。<br>如果c1=0,就是无私型粒子群算法,缺点是：只有社会，没有自我，迅速丧失群体多样性，容易陷入局部最优解而无法跳出。太依赖群体了。<br>如果学习因子c2=0,那么是自我认知型粒子群算法。不管社会群体。 完全没有信息的社会共享，导致算法收敛速度缓慢。<br>如果c1、c2都不为0，称为完全型粒子群算法。完全型粒子群算法更容易保持收敛速度和搜索效果的均衡，是较好的选择。<h4 id="粒子群算法的构成要素-最大速度"><a href="#粒子群算法的构成要素-最大速度" class="headerlink" title="粒子群算法的构成要素-最大速度"></a>粒子群算法的构成要素-最大速度</h4>作用：<br>在于维护算法的探索能力和开发能力的平衡。Vm较大时，探索能力增强，但是容易飞过最优解。Vm较小的时候，开发能力增强，但是容易陷入局部最优解。Vm一般设为每维变化范围的10%-20%。<h4 id="粒子群邻域算法的构成要素-邻域的拓扑结构"><a href="#粒子群邻域算法的构成要素-邻域的拓扑结构" class="headerlink" title="粒子群邻域算法的构成要素-邻域的拓扑结构"></a>粒子群邻域算法的构成要素-邻域的拓扑结构</h4>粒子群算法的邻域拓扑结构包括两种：<br>一种是将群体内的所有个体都作为粒子的邻域，另一种是只将群体中的部分个体作为粒子的邻域。<br>邻域拓扑结构决定了群体历史的最优位置。由此，将粒子群算法分为<strong>全局粒子群算法和局部粒子群算法。</strong><br>全局粒子群算法包括：<ul><li>1粒子自己历史最优值。</li><li>2粒子群体的全局最优值（最优值由全部粒子决定）<br>局部粒子群算法包括</li><li>1.粒子自己历史最优值</li><li>2.粒子邻域内粒子的最优值（部分个体粒子来决定）。<br>邻域随迭代次数的增加线性变大，最后邻域扩展到整个粒子群。<br>经过实践证明： <strong>全局版本的粒子群算法收敛速度快，但是容易陷入局部最优。局部版本的粒子群算法收敛速度慢，但是很难陷入局部最优。现在的粒子群算法大都在收敛速度与摆脱局部最优这两个方面下功夫。但是这两个方面存在着矛盾。只能是看如何更好折中。</strong><h4 id="粒子群算法的构成要素-停止准则"><a href="#粒子群算法的构成要素-停止准则" class="headerlink" title="粒子群算法的构成要素-停止准则"></a>粒子群算法的构成要素-停止准则</h4>停止准则一般有以下两种：<br>最大迭代步数<br>可接受的满意解<h4 id="粒子群算法的构成要素-粒子空间的初始化。"><a href="#粒子群算法的构成要素-粒子空间的初始化。" class="headerlink" title="粒子群算法的构成要素-粒子空间的初始化。"></a>粒子群算法的构成要素-粒子空间的初始化。</h4>较好地选择粒子的初始化空间，将大大缩短收敛时间。初始化空间根据具体问题的不同而不同。也就是说，这是问题依赖的。<br>总结：从上面的介绍可以看出，粒子群算法与其他现代优化方法相比的一个明显特色就是<strong>需要修改的参数很少</strong>。相对来说，<strong>惯性因子和邻域定义</strong>较为重要。这些关键参数的设置对算法的精度和效率有显著影响。<br>例题：<br><img src="https://img-blog.csdnimg.cn/20190828212448221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>题目来看主要是找最小值，即最优解的问题。<br>种群大小：即算法中粒子的数量，取m=5<br>编码：因为问题的维数是4，所以每个粒子的位置和速度均为4维的实数向量。<br>速度设定为Vmax=60，因为x属于-30-30之间。一共是60个空间。所以设置速度为60.<br><img src="https://img-blog.csdnimg.cn/20190828214746764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190828215032700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190831153209848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019083115471296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20190831154544634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190831154607455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>粒子群算法流程：<br>第一步：在初始化范围内，对粒子群进行随机初始化，包括随机位置和速度。<br>第二步：计算每个粒子的适应值。<br>第三步：更新粒子个体的历史最优位置。<br>第四步：更新粒子群体的历史最优位置。<br>第五步：更新粒子的速度和位置，<br><img src="https://img-blog.csdnimg.cn/20190831155819980.png" alt="在这里插入图片描述"><br>第六步：如果没有达到终止条件，转第二步。<h4 id="惯性权重"><a href="#惯性权重" class="headerlink" title="惯性权重"></a>惯性权重</h4></li></ul></li></ul><p>用动态调整惯性权重来平衡收敛的全局性和收敛速度，该算法被称为标准PSO算法。<br>    惯性权重w描述粒子上一代速度对当前代速度的影响。w值较大，全局寻优能力强，局部寻优能力弱。反之，则局部寻优能力强。当问题空间较大时，为了在搜索速度和搜索精度之间达到平衡，通常的做法是使算法在前期有较高的全局搜索能力以得到合适的种子，而在后期有较高的局部搜索能力以提高收敛精度，所以w不宜为一个固定的常数。<br>    线性递减权重：<br><img src="https://img-blog.csdnimg.cn/20190831160932151.png" alt="在这里插入图片描述"><br>较大的w有较好的全局收敛能力，较小的w则有较强的局部收敛能力。因此，随着迭代次数的增加，惯性权重w应该不断减小，从而使得粒子群算法在初期具有较强的全局收敛能力，而晚期具有较强的局部收敛能力。<br> 收缩因子法改进粒子群算法：<br> 引入收缩因子来保证算法的收敛性。<br> 速度更新公式为：<br> <img src="https://img-blog.csdnimg.cn/20190831190206677.png" alt="在这里插入图片描述"><br>  其中，收缩因子K为受φ1 φ2 限制的w。φ1 φ2是需要预先设定的模型<br>参数<br><img src="https://img-blog.csdnimg.cn/20190831190231923.png" alt="在这里插入图片描述"><br>    收缩因子法控制系统行为最终收敛，且可以有效搜索不同区域，该法能得到较高质量的解。<br>PSO应用面：<br>PSO应用包括系统设计，多目标优化，分类 （分类精度达到最大值），模式识别，调度（调度时间最少），信号处理，决策。具体应用为：模糊控制器设计，车间作业调度，机器人实时路径规划，自动目标检测，时频分析。<br>他的中心的思想为求解函数的最大值最小值。就是转化成结果的最大值最小值。<br>PSO存在的问题：</p><ul><li>一种新兴的优化算法，其数学基础薄弱，在收敛性理论、计算性能、实现技术和参数的设置等方面缺乏严密的数学基础，其应用大多数仍然依靠经验和实验。</li><li>PSO算法的理论研究：纵观PSO的研究成果，大部分研究都集中在算法的设计上，对<br>算法的性能、收敛性、收敛速度、参数选取及参数的鲁棒性等理论性的研究则很少，偶有一些理论研究，但仅仅局限在对算法的参数、状态及概念等方面，且理论分析的内容和深度都很浅，因此理论研究大大滞后于PSO在工程中的应用。</li><li>利用不同问题的特点设计出相应的有效算法，应注重高效的算法开发，提出合理的核心更新公式以及有效的均衡全局搜索和局部改进的策略。尤其要注重把PSO与其他算法，如进化算法、模糊逻辑、生物智能以及混沌等方法或策略相结合，来解决<strong>PSO易陷入局部最优的问题</strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
         &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;粒子群（鸟群算法）算法是典型的寻优算法。分为&lt;strong&gt;全局最优和局部最优。 基本思想&lt;/strong&gt;：主要模拟自然界生物捕食的策略，群体迭代，粒子在解空间追随最优的例子进行搜索。是智能算法的一种。&lt;br&gt;算法特点：&lt;/p&gt;
&lt;o
      
    
    </summary>
    
    
      <category term="数学建模 粒子群（鸟群算法）算法" scheme="https://hongyonghan.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1-%E7%B2%92%E5%AD%90%E7%BE%A4%EF%BC%88%E9%B8%9F%E7%BE%A4%E7%AE%97%E6%B3%95%EF%BC%89%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>数学建模之聚类分析</title>
    <link href="https://hongyonghan.github.io/post/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E4%B9%8B%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    <id>https://hongyonghan.github.io/post/数学建模之聚类分析/</id>
    <published>2019-09-03T16:03:44.000Z</published>
    <updated>2019-09-05T03:08:01.335Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h4 id="聚类分析"><a href="#聚类分析" class="headerlink" title="聚类分析"></a>聚类分析</h4><ul><li><p>聚类分析 所研究的样本或者变量之间存在<strong>不同的相似性</strong>，要求设法找出一些能够度量它们之间<strong>相似程度的统计量</strong>作为分类的<strong>依据</strong>，再利用这些将样本或者变量进行<strong>分类</strong>。</p></li><li><p>系统聚类分析：将n个样本或者n个指标<strong>看成n类</strong>，一类包括一个样本或者指标，然后将<strong>性质最接近的两类</strong>合并成<strong>一个新类</strong>，依次类推。最终可以按照需要来决定分多少类，每类有多少样本（指标）。</p><h4 id="系统聚类分析的步骤"><a href="#系统聚类分析的步骤" class="headerlink" title="系统聚类分析的步骤"></a>系统聚类分析的步骤</h4></li><li><p>1计算n个样本两两之间的距离。</p></li><li><p>2构成n个类，每类只包含一个样品</p></li><li><p>3合并距离最近的两类为一个新类  </p></li><li><p>4计算新类与当前各类的距离（新类与当前类的距离等于当前类与组合类中包含的类的距离的最小值），若类的个数等于1，转5，否则转3</p></li><li><p>5画聚类图 </p></li><li><p>6 决定类的个数和类。</p><h4 id="系统聚类分析"><a href="#系统聚类分析" class="headerlink" title="系统聚类分析"></a>系统聚类分析</h4><p>主要介绍系统聚类分析方法。系统聚类分析法是聚类分析中应用最为广泛的一种方法。<br>它的<strong>基本原理</strong>是：<strong>首先将一定数量的样品或者指标各自看成一类，然后根据样品（或者指标）的亲疏程度，将亲疏程度最高的两类进行合并。然后考虑合并后的类与其他类之间的亲疏程度，再进行合并。重复这一过程，直至将所有的样品（或者指标）合并为一类</strong>。<br>系统聚类分析用到的函数：<br><img src="https://img-blog.csdnimg.cn/20190823205324557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="聚类分析-1"><a href="#聚类分析-1" class="headerlink" title="聚类分析"></a>聚类分析</h4></li><li><p>研究对于<strong>样品或者指标</strong>进行分类的一种多元统计方法，是依据研究对象的个体的特征进行分类的方法。</p></li><li><p>聚类分析把分类对象按照一定规则分成若干类，这些<strong>类非事先</strong>给定的，而是<strong>根据数据特征确定的</strong>。在同一类中这些对象在某种意义上趋向于彼此相似，而在不同类中趋向于不相似。</p></li><li><p>职能是建立一种能按照样品或者变量的<strong>相似程度进行分类</strong>的方法。 </p><h4 id="聚类分析种类"><a href="#聚类分析种类" class="headerlink" title="聚类分析种类"></a>聚类分析种类</h4></li><li><p>聚类分析有两种：一种是对样品的分类，称为Q型，另一种是对变量（指标）的分类，称为R型。</p></li><li><p>R型聚类分析的主要作用：1.不但可以了解个别变量之间的亲疏程度，而且可以了解各个变量组合之间的亲疏程度。2.根据变量的分类结果以及它们之间的关系，可以<strong>选择主要变量</strong>进行Q型聚类分析或回归分析。（回归系数R^2为选择标准）</p></li><li><p>Q型聚类分析的主要作用：1.可以综合利用多个变量的信息对样本进行分析。2.分类效果直观，聚类谱系图清楚地表现数值分类结果。3.聚类分析所得到地结果比传统分类方法更细致全面合理。本文主要讨论Q型。</p><h4 id="聚类分析基本思想："><a href="#聚类分析基本思想：" class="headerlink" title="聚类分析基本思想："></a>聚类分析基本思想：</h4><p>在生产实际中经常遇到给产品等级进行分类的问题，如一等品、二等品等，在生物学中，要根据生物的特征进行分类；在考古时要对古生物化石进行科学分类；在球类比赛中经常要对各球队进行分组如何确定种子队，这些问题就是聚类分析问题。随着科学技术的发展，我们利用已知数据首先提取数据特征，然后借助计算机依据这些特征进行分类，聚类的依据在于各类别之间的接近程度如何计量，通常采取距离与相似系数进行衡量。</p></li><li><p>设有n个样品的p元观测数据组成一个数据矩阵。如下：<br><img src="https://img-blog.csdnimg.cn/20190823211519779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>其中每一行代表一个样品，每一列代表一个指标，xij表示第i个样品关于第j个指标的观测值，聚类分析的基本思想就是<strong>在样品之间定义距离</strong>，<strong>在指标之间定义相似系数</strong>，样品之间的<strong>相似系数</strong>刻画指标之间的<strong>相似度</strong>。 将样品（或者变量）按照<strong>相似度的大小逐一归类</strong>，关系密切的聚集到较小的一类，关系疏远的聚集到较大的一类，聚类分析通常有：谱系聚类、快速聚类。本文主要介绍谱系聚类。</p><h4 id="样品间的相似度量-距离"><a href="#样品间的相似度量-距离" class="headerlink" title="样品间的相似度量-距离"></a>样品间的相似度量-距离</h4><h6 id="一-常用距离的定义"><a href="#一-常用距离的定义" class="headerlink" title="一 常用距离的定义"></a>一 常用距离的定义</h6><p>设有n个样品的p元观测数据：<br><img src="https://img-blog.csdnimg.cn/20190823212650315.png" alt="在这里插入图片描述"><br>这时，每个样品可看成p元空间的一个点，每两个点之间的距离记为d(xi,xj)满足条件：<br><img src="https://img-blog.csdnimg.cn/20190823212809154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>距离计算：<br><img src="https://img-blog.csdnimg.cn/20190823213019340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190823213503574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt=" "><br>例题：<br>为了研究辽宁、浙江、河南、甘肃、青海5省1991年城镇居民生活消费规律，需要利用调查资料对五个省进行分类，指标变量共8个，意义如下：x1:人均粮食支出，x2:人均副食支出;x3:人均烟酒茶支出，x4:人均其他副食支出,x5:人均衣着商品支出,x6:人均日用品支出，x7:人均燃料支出，x8人均非商品支出。<br><img src="https://img-blog.csdnimg.cn/20190823213619204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>题目中给的数据都是有关系的。</p><ul><li>解：计算各省之间的欧氏、绝对、明氏距离</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a=[7.939.778.4912.9419.2711.052.0413.29</span><br><span class="line">7.6850.3711.3513.319.2514.592.7514.87</span><br><span class="line">9.4227.938.28.1416.179.421.559.76</span><br><span class="line">9.1627.989.019.3215.999.11.8211.35</span><br><span class="line">10.0628.6410.5210.0516.188.391.9610.81];</span><br><span class="line">d1=pdist(a);% 此时计算出各行之间的欧氏距离，为了得到书中的距离矩阵，我们键入命令：</span><br><span class="line">D= squareform(d1),  % 注意此时d1必须是一个行向量，结果是实对称矩阵</span><br><span class="line">%若想得到书中的三角阵，则有命令：</span><br><span class="line">S = tril(squareform(d1))</span><br><span class="line">d2=pdist(a,&apos;cityblock&apos;); S2 = tril(squareform(d2))</span><br><span class="line">d3=pdist(a,&apos;minkowski&apos;,3); S3 = tril(squareform(d3))</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://img-blog.csdnimg.cn/20190823214216451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例：表1.1 式1999年中国省（自治区、直辖市）的城市规模结构特征的一些数据，试通过聚类分析将这些省（自治区、直辖市）进行分类。<br><img src="https://img-blog.csdnimg.cn/2019082321453453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190823214656730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.基本假设<br>1.假设图表中的数据经过完全统计；<br>2.假设本题中考虑的指标变量相互之间无联系。</p><ul><li>模型的建立与分析<br><img src="https://img-blog.csdnimg.cn/20190823215543143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>模型的求解</li><li>模型的求解<br>绘制聚类图，根据实际需要决定类的个数和类。<br>根据上述解题过程编写如下MATLAB代码：保留列数据，新建为“str801.txt”；保留表中所有数据，新建为“data801.txt”<br><code>clc,clearfid=fopen(&#39;str801.txt&#39;,&#39;r&#39;);ss=textscan(fid,&#39;%s&#39;);a=load(&#39;data801.txt&#39;);b=zscore(a);d=pdist(b);z=linkage(d);dendrogram(z,&#39;label&#39;,ss{:})</code><img src="https://img-blog.csdnimg.cn/2019082321544054.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>结果分析：<br>根据编写代码绘制出的聚类分析图如上图1.1所示，我们发现京津冀、苏沪、青海各自成一类，其余地区成一类。<br>例2. 13个国家1990，1995，2000可持续发展能力如下：分成4类<br><img src="https://img-blog.csdnimg.cn/20190824223940426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>采取不同的距离，得到以下结果：<br><img src="https://img-blog.csdnimg.cn/20190824224024206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824224034285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019082422405047.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h4 id="变量间的相似度量——相似系数"><a href="#变量间的相似度量——相似系数" class="headerlink" title="变量间的相似度量——相似系数"></a>变量间的相似度量——相似系数</h4>当对p个指标变量进行聚类时，用相似系数来衡量变量之间的相似程度（关联度），若用       表示变量之间的相似系数，则应满足：<br><img src="https://img-blog.csdnimg.cn/20190824224130597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>相似系数中最常用的是<strong>相关系数与夹角余弦</strong>。</li><li>① 夹角余弦<br>两变量的夹角余弦定义为：<br><img src="https://img-blog.csdnimg.cn/20190824224214128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>② 相关系数<br>两变量的相关系数定义为：<br><img src="https://img-blog.csdnimg.cn/2019082422425279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例3.计算例1中各指标之间的相关系数与夹角余弦：<br>解：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=[7.939.778.4912.9419.2711.052.0413.29</span><br><span class="line">7.6850.3711.3513.319.2514.592.7514.87</span><br><span class="line">9.4227.938.28.1416.179.421.559.76</span><br><span class="line">9.1627.989.019.3215.999.11.8211.35</span><br><span class="line">10.0628.6410.5210.0516.188.391.9610.81];</span><br><span class="line">R=corrcoef(a);% 指标之间的相关系数</span><br><span class="line">a1=normc(a); % 将a的各列化为单位向量</span><br><span class="line">J=a1&apos;*a1  % 计算a中各列之间的夹角余弦</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://img-blog.csdnimg.cn/20190824224759601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="谱系聚类法"><a href="#谱系聚类法" class="headerlink" title="谱系聚类法"></a>谱系聚类法</h4><p>谱系聚类法是目前应用较为广泛的一种聚类法。谱系聚类是根据生物分类学的思想对研究对象进行分类的方法。在生物分类学中，分类的单位是：门、纲、目、科、属、种。其中种是分类的基本单位，分类单位越小，它所包含的生物就越少，生物之间的共同特征就越多。利用这种思想，谱系聚类首先将各样品自成一类，然后把最相似（距离最近或相似系数最大）的样品聚为小类，再将已聚合的小类按各类之间的相似性（用类间距离度量）进行再聚合，随着相似性的减弱，最后将一切子类都聚为一大类，从而得到一个按相似性大小聚结起来的一个谱系图。<br>聚类分析的<strong>基本思想</strong>是认为我们所研究的样本或指标（变量）之间存在着<strong>程度不同的相似性（亲疏关系）</strong>。于是根据一批样本的多个观测指标，具体找出一些彼此之间相似程度较大的样本（或指标）聚合为一类，把另外一些彼此之间相似程度较大的样本（或指标）又聚合为另一类，关系密切的聚合到一个小的分类单位，关系疏远的聚合到一个大的分类单位，直到把所有样本（或指标）都聚合完毕，把不同的类型一一划分出来，形成一个由小到大的分类系统。最后把整个分类系统画成一张谱系图，用它把所有样本（或指标）间的亲疏关系表示出来。这种方法是最常用的、最基本的一种，称为<strong>系统聚类分析</strong>。</p><h4 id="类间距离"><a href="#类间距离" class="headerlink" title="类间距离"></a>类间距离</h4><p>介绍两个类别之间的距离：<br>设dij表示两个样品xi,xj之间的距离，Gp,Gq分别表示两<br>个类别，各自含有np,nq个样品.<br>（1）最短距离：<br><img src="https://img-blog.csdnimg.cn/20190824225045568.png" alt="在这里插入图片描述"><br>用两类中样品之间的距离最短者作为两类间距离。<br>（2）最长距离<br><img src="https://img-blog.csdnimg.cn/2019082422511590.png" alt="在这里插入图片描述"><br>用两类中样品之间的距离最长者作为两类间距离<br><img src="https://img-blog.csdnimg.cn/20190824225151357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824225204432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">（3）类平均距离<br><img src="https://img-blog.csdnimg.cn/20190824225229406.png" alt="在这里插入图片描述"><br>用两类中所有两两样品之间距离的平均作为两类间距离。<br>（4）重心距离<br><img src="https://img-blog.csdnimg.cn/2019082422530976.png" alt="在这里插入图片描述"><br>用两类的重心之间的欧氏距离作为两类间的距离。<br>（5）离差平方和距离（ward）<br><img src="https://img-blog.csdnimg.cn/20190824225351102.png" alt="在这里插入图片描述"><br>显然，离差平方和距离与重心距离的平方成正比。</p><h4 id="类间距离的递推公式"><a href="#类间距离的递推公式" class="headerlink" title="类间距离的递推公式"></a>类间距离的递推公式</h4><p>设有两类Gp，Gq合并成新的一类Gr，包含了nr=np+nq个样品。如何计算Gr与其他类别Gk之间的距离，这就需要建立类间距离的递推公式。</p><ul><li><p>1.最短距离<br><img src="https://img-blog.csdnimg.cn/20190824230047147.png" alt="在这里插入图片描述"></p></li><li><p>2最长距离<br><img src="https://img-blog.csdnimg.cn/20190824230107792.png" alt="在这里插入图片描述"></p></li><li><p>3类平均距离<br><img src="https://img-blog.csdnimg.cn/20190824230119443.png" alt="在这里插入图片描述"></p></li><li><p>4重心距离<br><img src="https://img-blog.csdnimg.cn/20190824230133855.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824230206493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824230218598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="谱系聚类法的步骤"><a href="#谱系聚类法的步骤" class="headerlink" title="谱系聚类法的步骤"></a>谱系聚类法的步骤</h4></li><li><p>1选择样本间距离的定义及类间距离的定义</p></li><li><p>2计算n个样本两两之间的距离，得到距离矩阵。<br><img src="https://img-blog.csdnimg.cn/2019082423035444.png" alt="在这里插入图片描述"></p></li><li><p>3构造个类，每类只含有一个样本</p></li><li><p>4合并符合类间距离定义要求的两类为一个新类</p></li><li><p>5计算新类与当前各类的距离。若类的个数为1，则转到步骤6否则回到步骤4</p></li><li><p>6画出聚类图</p></li><li><p>7决定类的个数和类。 </p><h4 id="系统聚类分析的方法"><a href="#系统聚类分析的方法" class="headerlink" title="系统聚类分析的方法"></a>系统聚类分析的方法</h4></li><li><p>系统聚类法的聚类原则决定于<strong>样本间的距离以及类间距离的定义</strong>。类间距离的不同定义就产生了不同的系统聚类分析方法。</p></li><li><p>以下用dij表示样品X(i)和X(j)之间的距离，当样品间的亲疏关系采用相似系数Cij时<br><img src="https://img-blog.csdnimg.cn/20190824231103223.png" alt="在这里插入图片描述"></p></li><li><p>以下用D(p,q)表示类Gp和Gq之间的距离。</p></li><li><p>（1）n个样品开始作为n个类，计算两两之间的距离或者相似系数，得到实对称矩阵。<br><img src="https://img-blog.csdnimg.cn/20190824231402285.png" alt="在这里插入图片描述"></p><ul><li>（2）从D0的非主对角线上找最小（距离）或者最大元素（相似系数），设该元素是Dpq，则<strong>将Gp,Gq合并成一个新类Gr=（Gp,Gq）</strong>,在D0中去掉Gp，Gq所在的两行、两列，并加上新类与其余各类之间的距离（或者相似系数），得到n-1阶矩阵D1.</li><li>(3)从D1出发重复步骤（2）的做法得到D2,再由D2出发重复上述步骤，直到所有样品聚为一个大类为止。</li><li>（4）在合并过程中要记下合并样品的编号及两类合并时的水平，并绘制聚类谱系图。</li></ul><p>例4. 从例1算得的样品间的欧氏距离矩阵出发，用下列方法进行谱系聚类。<br>（1）最短距离，（2）最长距离<br>解：我们用1，2，3，4，5分别表示辽宁、浙江、河南、甘肃和青海，将距离矩阵记为D0</p></li></ul><p><img src="https://img-blog.csdnimg.cn/20190824232850229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>（1）最短距离法：将各省看成一类，即Gi={i} i=1，…..5,从D0可以看出各类中距离最短的是d43=2.20，因此将G3,G4在2.20水平上合成一个新类G6={3,4},计算G6和G1,G2,G5之间的最短距离，得到：</li></ul><p><img src="https://img-blog.csdnimg.cn/20190825111309603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>即将（3，4）作为单独一列，一行。将上述计算的结果作为第一列，从D0中去掉第3，4行与3，4列，剩余元素作为其余各列得到D1<br><img src="https://img-blog.csdnimg.cn/20190825112051179.png" alt="在这里插入图片描述"><br> 然后从D1可以看出G5与G6中的距离最小，因此在2.21的水平上将G6与G5合成一类G7，即G7={3,4,5},计算G7与G1、G2之间的最短距离得到：<br> <img src="https://img-blog.csdnimg.cn/20190825112550873.png" alt="在这里插入图片描述"><br>将计算结果作为第一列，从D1中划掉{3，4}与{5}所在的行和列，剩余元素作为其他列得到：<br><img src="https://img-blog.csdnimg.cn/20190825113231773.png" alt="在这里插入图片描述"><br> 从D2中可以看出G1，G2最接近，在11.67的水平上合并成一类G8,至此只剩下G7,G8两类，他们之间的距离为：12.8，故在此水平将合成一类，包含了全部的五个省份。最后，作出谱系聚类图。<br> 以<strong>2018年五一数学建模C题为例。</strong><br> <img src="https://img-blog.csdnimg.cn/20190825161137630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 注意对数据的量化处理方式：<br> <img src="https://img-blog.csdnimg.cn/20190825161453934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190825161504164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190825161944848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190825162001440.png" alt="  "><br> <img src="https://img-blog.csdnimg.cn/20190825162353184.png" alt="在这里插入图片描述"><br> 数据如下：<img src="https://img-blog.csdnimg.cn/20190825162403245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190825162418703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">clc,clear</span><br><span class="line">a=[3.248099862 1400.268343019 1595.2792625950.668859653.767546388.61016310.35729572718320.461540.000181229 83235.9611811701.2957</span><br><span class="line">0.313842461 159.444173537 177.7462234662.284702270.0183683742.604771730.342129003209700.000008924 2628771.0150925</span><br><span class="line">0.466173300 257.271504590 265.11899891025.51897594.9769019461.785860480.32360546721921.750.000022727 9141642.154022</span><br><span class="line">0.653314088 193.740207541 257.3170485955.937338879.7456574956.261330250.3341597814504.666670.000012397 339633.8301523</span><br><span class="line">4.777377094 1890.965552478 2082.6167958007.801239932.9081486558.05501820.32711774116111.60.000016287 4840.373816860.0313942</span><br><span class="line">0.274618332 118.983750840 126.9446139465.066694748.5681868731.386567740.41647662516795.50.000012747 3271389.5885042</span><br><span class="line">0.227587522 79.673939077 103.4399852402.638354235.1875925521.343293840.314754098174500.000002348 887.733767330.9389993</span><br><span class="line">0.416676302 169.501844080 194.3978197776.691676359.7294204944.164205490.32014010518562.50.000011300 8691.278086591.0445205</span><br><span class="line">0.275472987 115.688675169 138.2225522546.214530339.0568734631.591747640.341489362197190.000010870 3565.464982342.6701571</span><br><span class="line">0.224227313 173.672287944 185.1560534692.509258985.7124878647.126137140.314630309308150.000010066 2608.0554011917.304038</span><br><span class="line">0.642387833 366.064706442 402.74505171551.719929240.1888106118.16724180.22773468824155.50.000023164 7151.5321342759.019264</span><br><span class="line">0.216517796 47.380797240 39.30549861129.161938211.695260089.2533925890.62087912160300.000000266 648.893888319.44754811</span><br><span class="line">0.212064205 72.389522219 68.70408516275.884279818.8669249414.427648480.304106548131750.000001608 789.88.464149342</span><br><span class="line">]</span><br><span class="line">b=zscore(a);</span><br><span class="line">b=zscore(a);</span><br><span class="line">r=corrcoef(b)</span><br><span class="line">d=tril(1-r);d=nonzeros(d)&apos;;</span><br><span class="line">d=pdist(b&apos;,&apos;correlation&apos;);</span><br><span class="line">z=linkage(d,&apos;average&apos;)</span><br><span class="line">h=dendrogram(z);</span><br><span class="line">set(h,&apos;Color&apos;,&apos;k&apos;,&apos;LineWidth&apos;,1.3)</span><br><span class="line">T=cluster(z,&apos;maxclust&apos;,6)</span><br><span class="line">for i=1:6</span><br><span class="line">    tm=find(T==i);</span><br><span class="line">    tm=reshape(tm,1,length(tm));</span><br><span class="line">    fprintf(&apos;第%d类的有%s\n&apos;,i,int2str(tm));</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>得到聚类图如下：<br><img src="https://img-blog.csdnimg.cn/20190825162817740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>问题二：综合评价<br>综合评价方法推荐秩和比综合评价法。比较好上手。<br><img src="https://img-blog.csdnimg.cn/20190825163942667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20190825163956717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190825164024696.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190825164046662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019082516410065.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190825164111736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：为了研究辽宁等5省1991年城镇居民生活消费情况的分布规律，根据调查资料做类型分类，用最短距离做类间分类。数据如下：<br><img src="https://img-blog.csdnimg.cn/20190825164837559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>将每一个省区视为一个样品，先计算5个省区之间的欧式距离，用D0表示距离矩阵。<br><img src="https://img-blog.csdnimg.cn/20190825165035893.png" alt="在这里插入图片描述"><br>因此将3.4合并成为一类，为类6，替代了3，4两类。类6与剩余1，2，5类之间的距离表示为：<br><img src="https://img-blog.csdnimg.cn/2019082516522797.png" alt="在这里插入图片描述"><br>得到新矩阵：<br><img src="https://img-blog.csdnimg.cn/20190825165353424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>合并类6类5得到新类7<br>类7与剩余的1，2之间的距离分别为：<br><img src="https://img-blog.csdnimg.cn/20190825165455817.png" alt="在这里插入图片描述"><br>得到新矩阵：<br><img src="https://img-blog.csdnimg.cn/20190825165522128.png" alt="在这里插入图片描述"><br>合并类1和类2，得到新类8<br>此时，我们有两个不同的类：类7和类8。<br>它们的最近距离：<br><img src="https://img-blog.csdnimg.cn/20190825165915300.png" alt="在这里插入图片描述"><h4 id="谱系聚类的matlab实现"><a href="#谱系聚类的matlab实现" class="headerlink" title="谱系聚类的matlab实现"></a>谱系聚类的matlab实现</h4></li><li>（1）输入数据矩阵，注意行和列的实际意义。</li><li>（2）计算各样品之间的距离（行？列？）<br>欧氏距离：d=pdist(A)    % 注意计算A中各行之间的距离；<br>绝对距离：d= pdist(A,’cityblock’);<br>明氏距离：d=pdist(A,’minkowski’,r);   % r要填上具体的实数；<br>方差加权距离：d= pdist(A,’seuclid’);<br>马氏距离：d= pdist(A,’mahal’);<br>挑选里面最高大上的性价比最高的来用。<br>注意：以上命令输出的结果是一个<strong>行向量</strong>，如果要得到一个距离矩阵，可以用命令：<br>D= squareform(d),如果要得到三角阵命令： D= tril(squareform(d1))<ul><li>（3）选择不同的类间距离进行聚类。要清楚要什么才去选择。<br>最短距离：z1= linkage(d)     % 此处及以下的d都是（2）中算出的距离行向量<br>最长距离：z2= linkage(d,’complete’)<br>中间距离：z3= linkage(d,’centroid’)<br>重心距离：z4= linkage(d,’average’)<br>离差平方和：z5= linkage(d,’ward’)</li></ul></li></ul><p><strong>注意</strong>：此时输出的结果是一个n-1行3列的矩阵，         每一行表示在某水平上合并为一类的序号；</p><ul><li>（4）作出谱系聚类图<br>H=dendrogram(z,d)         % 注意若样本少于30，可以省去d,否则必须填写.</li><li>（5）根据分类数目，输出聚类结果<br>T=cluster(z,k) % 注意k是分类数目，z是（3）中的结果。Find(T==k0) % 找出属于第k0类的样品编号。<br>例题5：将例1 利用MATLAB软件进行聚类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">解：b=[7.939.778.4912.9419.2711.052.0413.29</span><br><span class="line">7.6850.3711.3513.319.2514.592.7514.87</span><br><span class="line">9.4227.938.28.1416.179.421.559.76</span><br><span class="line">9.1627.989.019.3215.999.11.8211.35</span><br><span class="line">10.0628.6410.5210.0516.188.391.9610.81];</span><br><span class="line">欧氏距离：d1=pdist(b); %b中每行之间距离</span><br><span class="line">% 五种类间距离聚类</span><br><span class="line">z1=linkage(d1);   </span><br><span class="line">z2=linkage(d1,&apos;complete&apos;);</span><br><span class="line">z3=linkage(d1,&apos;average&apos;);</span><br><span class="line">z4=linkage(d1,&apos;centroid&apos;);</span><br><span class="line">z5=linkage(d1,&apos;ward&apos;);</span><br></pre></td></tr></table></figure><p>其中z1输出结果为：<br>z1 =<br>    3.0000    4.0000    2.2033<br>    6.0000    5.0000    2.2159<br>   1.0000    2.0000   11.6726<br>   8.0000    7.0000   12.7983  </p><p>% 在2.2033的水平，G3,G4合成一类为G6<br>% 在2.2159的水平，G6,G5合成一类为G7<br>% 在11.6726的水平，G1,G2合成一类为G8<br> % 在12.7983的水平，G7,G8合成一类</p><p> 作谱系聚类图：H= dendrogram(z1)<br> <img src="https://img-blog.csdnimg.cn/20190825171159973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p> % 输出分类结果<br> T=cluster(z1,3)<br> 结果表明：若分为三类，则辽宁是一类，浙江是一类，河南、青海和甘肃是另一类。<br> 代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">b=[7.939.778.4912.9419.2711.052.0413.29</span><br><span class="line">7.6850.3711.3513.319.2514.592.7514.87</span><br><span class="line">9.4227.938.28.1416.179.421.559.76</span><br><span class="line">9.1627.989.019.3215.999.11.8211.35</span><br><span class="line">10.0628.6410.5210.0516.188.391.9610.81];</span><br><span class="line"></span><br><span class="line">d1=pdist(b); %欧氏距离：b中每行之间距离</span><br><span class="line">% 五种类间距离聚类</span><br><span class="line">z1=linkage(d1);</span><br><span class="line">z2=linkage(d1,&apos;complete&apos;);</span><br><span class="line">z3=linkage(d1,&apos;average&apos;);</span><br><span class="line">z4=linkage(d1,&apos;centroid&apos;);</span><br><span class="line">z5=linkage(d1,&apos;ward&apos;);</span><br><span class="line">H= dendrogram(z1) %作谱系聚类图</span><br><span class="line">% 输出分类结果</span><br><span class="line">T=cluster(z1,3)</span><br><span class="line">% 结果表明：若分为三类，则辽宁是一类，浙江是一类，河南、青海和甘肃是另一类。</span><br></pre></td></tr></table></figure><p>以上是样品之间是欧式距离，类间距离是最短距离聚类大的结果。<br>但是实际上呢。对样品之间的每一种距离，可以由五种不同的类间距离进行聚类。那么怎么去评测哪一种最好呢？<br><strong>为此我们可以去计算复合相关系数，若该系数越接近于1，则该聚类越理想。计算命令如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R=cophenet(z,d)</span><br></pre></td></tr></table></figure><p>其中，z 是用某种类间距离linkage后的结果，<br>d是样品之间的某种距离，想了解利用欧式距离聚类，哪种类间距离最好，可以计算五个复合相关系数，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">R=[cophenet(z1,d1),cophenet(z2,d1),</span><br><span class="line">cophenet(z3,d1),cophenet(z4,d1),</span><br><span class="line">cophenet(z5,d1)]</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://img-blog.csdnimg.cn/20190825200325185.png" alt="在这里插入图片描述"><br>由结果可以看出，由于0.8623最大，所以认为若样品之间采用欧式距离，则类间距离以中间距离最好，如果我们要找到最理想的分类方法。可以对每一种样品之间的距离，都计算上述的复合相关系数，都计算上述的复合相关系数，这样就可以找到最理想的样品距离与对应的类间距离。</p><h4 id="4-3-快速聚类法"><a href="#4-3-快速聚类法" class="headerlink" title="4.3 快速聚类法"></a>4.3 快速聚类法</h4><p>  快速聚类法又称为动态聚类法，该方法首先将样品进行粗糙分类，然后依据样品间的距离按一定规则进行调整，直至不能调整为止.该方法适用于样品数量较大的数据集的聚类分析，但是需要事先给定聚类数目，此数目对最终聚类结果有很大影响，实际应用时要选择多个数目进行分类，然后找出合理的分类结果.<br>  4.3.1 快速聚类的步骤<br>  聚点是一批有代表性的样品，他的选择决定了初始分类，并对最终分类有很大影响，选择聚点之前要先确定聚类数k.<br>  <img src="https://img-blog.csdnimg.cn/20190825202205804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  <img src="https://img-blog.csdnimg.cn/20190825202219835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  ② 首先按照亚非洲、美洲、欧洲、大洋洲分为四类，以每一类的均值向量作为聚点.<br>  ③ 最小最大准则(a为原始数据矩阵）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  [m,n]=size(a);</span><br><span class="line">for i=1:m</span><br><span class="line">    for j=1:m</span><br><span class="line">    d(i,j)=[a(i,:)-a(j,:)]*[a(i,:)-a(j,:)]‘; %欧氏距离平方</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">d1=max(d);</span><br><span class="line">d2=sort(d1,&apos;descend&apos;);</span><br><span class="line">[d2,i1]=sort(d1,‘descend’); % i1前两位数字为初始聚点号码</span><br><span class="line">d3=max(min(setdiff(d(:,i1(1)),0)),min(setdiff(d(:,i1(2)),0)));</span><br><span class="line">t3=[find(d(:,i1(1))==d3),find(d(:,i1(2))==d3)];% c=[i1(1),i1(2),t3];</span><br><span class="line">c1=setdiff([1:13]&apos;,c);</span><br><span class="line">d4=max(min(d(c1,c)));</span><br><span class="line">t4=[find(d(:,i1(1))==d4),find(d(:,i1(2))==d4),find(d(:,t3)==d4)];</span><br></pre></td></tr></table></figure><p>由此得到：美国、南非、日本、德国</p><h4 id="快速聚类的步骤"><a href="#快速聚类的步骤" class="headerlink" title="快速聚类的步骤"></a>快速聚类的步骤</h4><p><img src="https://img-blog.csdnimg.cn/2019082520234244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">% 初始聚类</span><br><span class="line">c2=setdiff(c1,t4);</span><br><span class="line">c3=[i1(1),i1(2),t3,t4];</span><br><span class="line">D=d(:,[i1(1),i1(2),t3,t4]);</span><br><span class="line">[D1,J1]=sort(D,2);</span><br><span class="line">for i=1:m</span><br><span class="line">    if D1(i)~=0</span><br><span class="line">        L1(i)=J1(i,1);</span><br><span class="line">    else</span><br><span class="line">        L1(i)=J1(i,2);</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"> q1=find(L1==1);q2=find(L1==2);q3=find(L1==3);q4=find(L1==4);</span><br><span class="line"> G1=a([i1(1),q1],:)</span><br><span class="line"> G2=a(setdiff([i1(2),q2],[i1(1),q1]),:)</span><br><span class="line"> G3=a(setdiff([t3,q3],[i1(1),i1(2),q1,q2]),:)</span><br><span class="line"> G4=a(setdiff([t4,q4],[i1(1),i1(2),t3,q3]),:)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190825202420883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">% 二次聚点与分类</span><br><span class="line">m1=mean(G1);</span><br><span class="line">m2=G2;</span><br><span class="line">m3=mean(G3);</span><br><span class="line">m4=mean(G4);</span><br><span class="line">Q=dist([m1;m2;m3;m4],a&apos;);</span><br><span class="line">F1=sort(Q);</span><br><span class="line">[F1,U1]=sort(Q)</span><br><span class="line">e1=find(U1(1,:)==1),</span><br><span class="line">e2=find(U1(1,:)==2),</span><br><span class="line">e3=find(U1(1,:)==3),</span><br><span class="line">e4=find(U1(1,:)==4)</span><br></pre></td></tr></table></figure><p>聚类结果如下：<br>巴西、印度、南非</p><h4 id="类的个数的确定"><a href="#类的个数的确定" class="headerlink" title="类的个数的确定"></a>类的个数的确定</h4><p>由适当的阈值确定；<br>根据数据点的散布直观地确定类的个数；<br>根据统计量确定分类个数；<br>根据谱系图确定分类个数的准则：</p><ul><li>各类重心间的距离必须很大；</li><li>类中保包含的元素不要太多；</li><li>类的个数必须符合实际应用；</li><li>如果采用几种不同的聚类方法处理，则在各种聚类图中应该发现相同的类。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;聚类分析&quot;&gt;&lt;a href=&quot;#聚类分析&quot; class=&quot;headerlink&quot; title=&quot;聚类分析&quot;&gt;&lt;/a&gt;聚类分析&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;聚类分析 所研究的样本或者变量之间存在&lt;strong&gt;不同的相似性&lt;/
      
    
    </summary>
    
    
      <category term="数学建模 聚类分析" scheme="https://hongyonghan.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1-%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数学建模之优劣解距离法</title>
    <link href="https://hongyonghan.github.io/post/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E4%B9%8B%E4%BC%98%E5%8A%A3%E8%A7%A3%E8%B7%9D%E7%A6%BB%E6%B3%95%E7%90%86%E8%AE%BA%E7%AF%87%EF%BC%88%E7%BB%BC%E5%90%88%E8%AF%84%E4%BB%B7%EF%BC%89/"/>
    <id>https://hongyonghan.github.io/post/数学建模之优劣解距离法理论篇（综合评价）/</id>
    <published>2019-08-21T14:03:44.000Z</published>
    <updated>2019-09-05T03:08:48.712Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>TOPSIS称为优劣解距离法。是一种常用的<strong>综合评价方法</strong>，能充分利用原始数据的信息，其结果能精确地反映各评价方案之间地差距。<br>首先分析层次分析法地一些局限性：<br>（1）评价的决策层不能太多，太多的话n会很大，判断矩阵和一致矩阵地差异可能会很大。<br><img src="https://img-blog.csdnimg.cn/20190831202904314.png" alt="在这里插入图片描述"><br>平均随机一致性指标R1的表格中n最多是15.<br>（2）如果决策层中的指标的数据是已知的，那么我们如何利用这些数据来使得评价更加准确呢？<br><img src="https://img-blog.csdnimg.cn/20190831203107385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>*<em>一个栗子 *</em><br>小明宿舍共有四名同学，他们第一学期的高数成绩如下表所示：<br><img src="https://img-blog.csdnimg.cn/20190831203346475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>请你为这四名同学进行评分，该评分能合理的描述其高数成绩的高低。<br>一个很简单的想法：可以直接用成绩来评价一个成绩的高低。排名的成绩越小越好，那么对排名进行处理，让他越大越好。然后对数据进行归一化。用数来除以他们排名的和就可以得到评分。<br><img src="https://img-blog.csdnimg.cn/20190831203703719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后我们修改成绩数据，将小王的分数修为10分，清风的数据修改为90分。但是修改后排名数据是没有变化的，那么评分也不会变化。<br><img src="https://img-blog.csdnimg.cn/20190831203944387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所以我们之前的评分不够合理。<br>一个比较好的想法：<br><img src="https://img-blog.csdnimg.cn/20190831204055624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后我们找出最高成绩max：99 最低成绩min:60 构造计算评分的公式：x-min/max-min.<br>然后对评分进行归一化，即各个未归一化的评分除以这四个评分的和得到归一化的评分。</p><p><img src="https://img-blog.csdnimg.cn/20190831204526888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>一个要说明的问题</strong><br> 使用卷面最高分max:100，卷面最低分：0，构造计算评分的公式：x-0/100-0 .这个模型看起来也是可行的。并且可能感觉更好。<br> <img src="https://img-blog.csdnimg.cn/20190831204932752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 但是缺点如下：<br> （1）比较的对象 一般要远大于两个。（例如一个班的成绩）<br> （2）比较的指标也往往不只是一个方面的，例如成绩、工时数，课外竞赛得分等<br> （3）有很多指标不存在理论上的最大值和最小值。比如衡量经济增长水平的指标：GDP增速。<br> <img src="https://img-blog.csdnimg.cn/20190831205634712.png" alt="在这里插入图片描述"><br> 拓展问题：增加指标个数<br> 新增加一个指标，现在要综合评价四位同学，并为他们评分。<br> <img src="https://img-blog.csdnimg.cn/2019083120575856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 成绩是<strong>越大越好</strong>，这样的指标称为<strong>极大型指标（效益性指标）</strong><br> 与他人争吵的次数是<strong>越少越好</strong>，这样的指标称为<strong>极小型指标（成本型指标）</strong></p><h5 id="统一指标类型"><a href="#统一指标类型" class="headerlink" title="统一指标类型"></a>统一指标类型</h5><p> 把所有的指标转化成极大型称为<strong>指标正向化（最常用）</strong><br>   <img src="https://img-blog.csdnimg.cn/20190831211026982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>   极小型指标转化成极大型指标的公式：<strong>max-x</strong><br>   <strong>标准化处理</strong><br>   <img src="https://img-blog.csdnimg.cn/20190831213615787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>   为了<strong>消去不同指标量纲的影响</strong>，需要对已经正向化的矩阵进行<strong>标准化处理</strong> </p><h5 id="标准化处理的计算公式："><a href="#标准化处理的计算公式：" class="headerlink" title="标准化处理的计算公式："></a>标准化处理的计算公式：</h5><p>   假设有n个要评价的对象，n个评价指标（已经正向化了）构成的正向化矩阵如下：<br>   <img src="https://img-blog.csdnimg.cn/20190831214052614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>   <img src="https://img-blog.csdnimg.cn/20190831214116558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="如何计算得分："><a href="#如何计算得分：" class="headerlink" title="如何计算得分："></a>如何计算得分：</h5><p><img src="https://img-blog.csdnimg.cn/20190831214319901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>只有一个指标的时候，构造计算评分的公式：x-min/max-min<br>变形=（x-min)/(max-min)=(x-min)/(max-x)+(x-min)<br>以上可以看作：<br>x与最小值的距离/x与最大值的距离+x与最小值的距离。<br><img src="https://img-blog.csdnimg.cn/20190831214607659.png" alt="在这里插入图片描述"><br>类比只有一个指标计算得分：<br><img src="https://img-blog.csdnimg.cn/20190831214740424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如何计算得分<br><img src="https://img-blog.csdnimg.cn/20190831220127646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 一定要经过标准化。<br> <img src="https://img-blog.csdnimg.cn/20190831220749914.png" alt=" "><br> <img src="https://img-blog.csdnimg.cn/20190831225023606.png" alt="在这里插入图片描述"><br> 如何计算得分：<br> <img src="https://img-blog.csdnimg.cn/20190831225604368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190831225620422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190831225639320.png" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190831225654105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> TOPSIS的介绍：<br> TOPSIS法是一种常用的综合评价方法，能充分利用原始数据的信息，其结果能精确反映各评价方案之间的差距。<br> 基本过程：先将原始数据矩阵统一指标类型（一般正向化处理）得到正向化矩阵，再对正向化矩阵进行标准化处理以消除各指标量纲的影响，并找到有限方案中的最优方案和最劣方案，然后分别计算各评价对象与最优方案和最劣方案的距离，获得各评价对象与最优方案的相对接近程度，以此来作为评价优劣的依据。该方法对数据分布及样本含量没有严格限制，数据计算简单易行。<br> 第一步：将原始矩阵正向化<br> 最常见的四种指标：</p><p><img src="https://img-blog.csdnimg.cn/20190831230405772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  所谓的将原始 矩阵正向化，就是要将所有指标类型统一转化成极大型指标。（转换的函数形式可以不唯一）<br>  <strong>极小型指标-&gt;极大型指标</strong><br>  <img src="https://img-blog.csdnimg.cn/20190901102310374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  极小型指标转换为极大型指标的公式:max-x<br>  如果所有的元素均为正数，那么也可以使用1/x.<br>  但是还是推荐使用第一种：max-x。第二种限制条件太多。<br>  <strong>中间型指标-&gt;极大型指标</strong><br>  中间型指标：指指标既不要太大也不要太小，取某个特定值最好（例如水质量评估PH值）{xi}是一组中间型指标序列，且最佳的数值为xbest，那么正向化的公式如下：<br>  <img src="https://img-blog.csdnimg.cn/20190901102857660.png" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190903152705256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 根据如上表中的数据如何计算M呢。因为是计算的PH值，则最好的值为xbest,则M的计算如下：<br> <img src="https://img-blog.csdnimg.cn/20190903153204269.png" alt="在这里插入图片描述"></p><h6 id="区间型指标转化成极大型指标"><a href="#区间型指标转化成极大型指标" class="headerlink" title="区间型指标转化成极大型指标"></a>区间型指标转化成极大型指标</h6><p> 区间型指标：指标值落在某个区间最好，例如人的体温落在36度-37度这个区间比较好。<br> {xi}是一组中间型指标序列，且最佳的的区间为[a,b],那么正向化的公式如下：<br> <img src="https://img-blog.csdnimg.cn/20190903153733356.png" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190903153745212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt=" "><br> 以体温的题目为例：<br> <img src="https://img-blog.csdnimg.cn/20190903153912352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190903153939495.png" alt="在这里插入图片描述"><br> 第二步：正向化矩阵标准化：<br> 标准化的目的主要是消除不同指标量纲的影响。<br> 假如有n个要评价的对象，m个评价指标（指标已经正向化）构成的正向化矩阵如下：<br> <img src="https://img-blog.csdnimg.cn/20190903154208899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 那么，对其标准化的矩阵记为Z,Z中的每一个元素：<br> <img src="https://img-blog.csdnimg.cn/20190903154620315.png" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/2019090315464965.png" alt="在这里插入图片描述"><br> 第三步：计算得分并归一化。<br> 假设有n个要评价的对象，m个评价指标的标准化矩阵。<br> <img src="https://img-blog.csdnimg.cn/20190903155045349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20190903155209839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <strong>一起做个题</strong><br> <img src="https://img-blog.csdnimg.cn/2019090315554068.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 由含氧量越大越好是一个极大型指标，PH值越接近于7越好，是一个中间型指标，细菌总数越少越好，是一个极小型指标，植物性营养物量介于10-20之家最佳是一个区间型指标。<br> 模型拓展：<br> <img src="https://img-blog.csdnimg.cn/20190903162124979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 在模型中我们默认了相同的权重。但是实际中指标的权重可能是不同的。所以我们定义评价对象和最大值的距离D+和评价对象与最小值的距离D-的时候，我们在前面加上权重wj。<br> 具体如下：<br> <img src="https://img-blog.csdnimg.cn/20190903162422414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 然后怎么设置权重呢？用层次分析法即可。<br> <strong>带权重的TOPSIS</strong><br> 假设有n个要评价的对象，m个评价指标的标准化矩阵。<br> <img src="https://img-blog.csdnimg.cn/20190903162634572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjA1MTY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 可以使用层次分析法给这m个评价指标确定权重：</p><p> <img src="https://img-blog.csdnimg.cn/20190903162724665.png" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;TOPSIS称为优劣解距离法。是一种常用的&lt;strong&gt;综合评价方法&lt;/strong&gt;，能充分利用原始数据的信息，其结果能精确地反映各评价方案之间地差距。&lt;br&gt;首先分析层次分析法地一些局限性：&lt;br&gt;（1）评价的决策层不能太多，太多的
      
    
    </summary>
    
    
      <category term="优劣解距离法 数学建模" scheme="https://hongyonghan.github.io/tags/%E4%BC%98%E5%8A%A3%E8%A7%A3%E8%B7%9D%E7%A6%BB%E6%B3%95-%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>数据结构课设《职工管理系统》</title>
    <link href="https://hongyonghan.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E8%AE%BE%E3%80%8A%E8%81%8C%E5%B7%A5%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E3%80%8B/"/>
    <id>https://hongyonghan.github.io/post/数据结构课设《职工管理系统》/</id>
    <published>2019-07-22T00:32:57.000Z</published>
    <updated>2019-09-05T03:07:27.741Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>主要功能：存储职工的职工号、姓名、部门号、工资，实现职工号、部门号、工资的排序，删除单个职工的记录、删除全部职工的记录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt; </span><br><span class="line">#include &lt;stdlib.h&gt; </span><br><span class="line">#include &lt;string.h&gt; </span><br><span class="line">#include &lt;malloc.h&gt;</span><br><span class="line">struct Worker </span><br><span class="line">//建立包含职工号、姓名、部门、工资的结构体 </span><br><span class="line">&#123; </span><br><span class="line">int no; /*职工号*/ </span><br><span class="line">char name[10]; /*姓名*/ </span><br><span class="line">int depno;    /*部门*/</span><br><span class="line">int salary; /*工资*/ </span><br><span class="line"></span><br><span class="line">&#125;; </span><br><span class="line">//typedef struct Worker *pworker; </span><br><span class="line"></span><br><span class="line">struct LINK</span><br><span class="line">///此为定义链表的结构体,结构名为LINK，结构成员为Worker和LINK </span><br><span class="line">&#123; </span><br><span class="line">Worker w; </span><br><span class="line">LINK *next; </span><br><span class="line">&#125;; </span><br><span class="line">typedef struct LINK *PLINK; </span><br><span class="line"></span><br><span class="line">/*程序结束时释放内存*/ </span><br><span class="line">void release(PLINK p) </span><br><span class="line">&#123; </span><br><span class="line">PLINK q; </span><br><span class="line">while(NULL!=p-&gt;next) </span><br><span class="line">&#123; </span><br><span class="line">q=p; </span><br><span class="line">p=p-&gt;next; </span><br><span class="line">free(q); </span><br><span class="line">&#125; </span><br><span class="line">free(p); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">/*创建职工信息链表*/ </span><br><span class="line">PLINK create() </span><br><span class="line">&#123; </span><br><span class="line">PLINK p=(PLINK)malloc(sizeof(struct LINK)); </span><br><span class="line">if(NULL!=p) </span><br><span class="line">&#123; </span><br><span class="line">p-&gt;next=NULL; </span><br><span class="line">return p; </span><br><span class="line">&#125; </span><br><span class="line">printf(&quot;内存不足!\n&quot;); </span><br><span class="line">return NULL; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> /*显示程序界面文字*/ </span><br><span class="line">void message() </span><br><span class="line">&#123; </span><br><span class="line">system(&quot;cls&quot;);//清屏 </span><br><span class="line">system(&quot;color 00a&quot;);//字的颜色 </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">printf(&quot;                         --请输入：【1】  录入职工信息\n&quot;); </span><br><span class="line">printf(&quot;                         --请输入：【2】  浏览职工信息\n&quot;); </span><br><span class="line">printf(&quot;                         --请输入：【3】  按职工号排序\n&quot;); </span><br><span class="line">printf(&quot;                         --请输入：【4】  按部门号排序\n&quot;);</span><br><span class="line">printf(&quot;                         --请输入：【5】  按工资数排序\n&quot;); </span><br><span class="line">printf(&quot;                         --请输入：【6】  删除指定职工号信息\n&quot;); </span><br><span class="line">printf(&quot;                         --请输入：【7】  删除职工文件中的全部记录 \n&quot;); </span><br><span class="line">printf(&quot;         --请输入：【8】  清屏\n&quot;); </span><br><span class="line">printf(&quot;                         --请输入：【-1】 退出\n&quot;); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">void SaveFile(PLINK p)//将职工单链表数据存入数据文件</span><br><span class="line">&#123;</span><br><span class="line">PLINK q=p-&gt;next;</span><br><span class="line">int n=0;</span><br><span class="line">FILE *fp;</span><br><span class="line">if ((fp=fopen(&quot;work.txt&quot;,&quot;wb&quot;))==NULL)   //以只写（‘wb’）的方式打开名为‘emp.dat’的文件</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;  提示:不能创建文件work.txt\n&quot;);</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">while (q!=NULL)</span><br><span class="line">&#123;</span><br><span class="line">fwrite(&amp;q-&gt;w,sizeof(Worker),1,fp);         //文件写接口</span><br><span class="line">q=q-&gt;next;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);                               //关闭文件</span><br><span class="line">release(p);//释放职工单链表L</span><br><span class="line">if (n&gt;0)</span><br><span class="line">printf(&quot;  提示:%d个职工记录写入work.txt文件\n&quot;,n);</span><br><span class="line">else</span><br><span class="line">printf(&quot;  提示:没有任何职工记录写入work.txt文件\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*录入职工信息*/ </span><br><span class="line">int add(PLINK p) </span><br><span class="line"></span><br><span class="line">//采用头插法 </span><br><span class="line">&#123; </span><br><span class="line">PLINK q=(PLINK)malloc(sizeof(struct LINK)); </span><br><span class="line">if(NULL==q) </span><br><span class="line">&#123; </span><br><span class="line">printf(&quot;录入失败提示：内存不足!\n&quot;); </span><br><span class="line">return -1; </span><br><span class="line">&#125; </span><br><span class="line">printf(&quot;请输入职工号(数字)：&quot;); </span><br><span class="line">scanf(&quot;%d&quot;,&amp;q-&gt;w.no); </span><br><span class="line">PLINK h=p-&gt;next; </span><br><span class="line">while(h) </span><br><span class="line">&#123; </span><br><span class="line">if(h-&gt;w.no==q-&gt;w.no) </span><br><span class="line">&#123; </span><br><span class="line">free(q); </span><br><span class="line">printf(&quot;录入失败提示：此职工号已经存在!\n&quot;); </span><br><span class="line">return -1; </span><br><span class="line">&#125; </span><br><span class="line">h=h-&gt;next; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">printf(&quot;请输入职工姓名(文字)：&quot;); </span><br><span class="line">scanf(&quot;%s&quot;,&amp;q-&gt;w.name); </span><br><span class="line">printf(&quot;请输入职工部门号(数字)：&quot;); </span><br><span class="line">scanf(&quot;%d&quot;,&amp;q-&gt;w.depno); </span><br><span class="line">printf(&quot;请输入职工工资数(数字)：&quot;); </span><br><span class="line">scanf(&quot;%d&quot;,&amp;q-&gt;w.salary); </span><br><span class="line"> </span><br><span class="line">q-&gt;next=p-&gt;next;                        //头插法</span><br><span class="line">p-&gt;next=q; </span><br><span class="line">printf(&quot;录入成功!\n&quot;); </span><br><span class="line">return -1; </span><br><span class="line">&#125; </span><br><span class="line">void nopai(PLINK p)&#123;//职工号排序</span><br><span class="line">PLINK o,pre,q;</span><br><span class="line">o=p-&gt;next-&gt;next;</span><br><span class="line">p-&gt;next-&gt;next=NULL;</span><br><span class="line">while(o!=NULL)&#123;</span><br><span class="line">q=o-&gt;next;</span><br><span class="line">pre=p;</span><br><span class="line">while(pre-&gt;next!=NULL&amp;&amp;pre-&gt;next-&gt;w.no&lt;o-&gt;w.no)</span><br><span class="line">pre=pre-&gt;next;</span><br><span class="line">o-&gt;next=pre-&gt;next;</span><br><span class="line">pre-&gt;next=o;</span><br><span class="line">o=q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void depnopai(PLINK p)&#123;//部门号排序</span><br><span class="line">PLINK o,pre,q;</span><br><span class="line">o=p-&gt;next-&gt;next;</span><br><span class="line">p-&gt;next-&gt;next=NULL;</span><br><span class="line">while(o!=NULL)&#123;</span><br><span class="line">q=o-&gt;next;</span><br><span class="line">pre=p;</span><br><span class="line">while(pre-&gt;next!=NULL&amp;&amp;pre-&gt;next-&gt;w.depno&lt;o-&gt;w.depno)</span><br><span class="line">pre=pre-&gt;next;</span><br><span class="line">o-&gt;next=pre-&gt;next;</span><br><span class="line">pre-&gt;next=o;</span><br><span class="line">o=q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void salarypai(PLINK p)</span><br><span class="line">//冒泡排序 </span><br><span class="line">&#123;//工资排序</span><br><span class="line">PLINK o,pre,q;</span><br><span class="line">o=p-&gt;next-&gt;next;</span><br><span class="line">p-&gt;next-&gt;next=NULL;</span><br><span class="line">while(o!=NULL)&#123;</span><br><span class="line">q=o-&gt;next;</span><br><span class="line">pre=p;</span><br><span class="line">while(pre-&gt;next!=NULL&amp;&amp;pre-&gt;next-&gt;w.salary&lt;o-&gt;w.salary)</span><br><span class="line">pre=pre-&gt;next;</span><br><span class="line">o-&gt;next=pre-&gt;next;</span><br><span class="line">pre-&gt;next=o;</span><br><span class="line">o=q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">/*浏览职工信息*/</span><br><span class="line">void show(PLINK p) </span><br><span class="line">&#123; </span><br><span class="line">message(); </span><br><span class="line">printf(&quot;浏览职工信息\n&quot;); </span><br><span class="line">printf(&quot;职工号\t姓名\t部门号\t工资\t\n&quot;); </span><br><span class="line">while(NULL!=p-&gt;next) </span><br><span class="line">&#123; </span><br><span class="line">printf(&quot;%d\t%s\t%d\t%d\t\n&quot;, </span><br><span class="line">p-&gt;next-&gt;w.no,p-&gt;next-&gt;w.name,p-&gt;next-&gt;w.depno,p-&gt;next-&gt;w.salary);</span><br><span class="line"></span><br><span class="line">p=p-&gt;next; </span><br><span class="line">&#125; </span><br><span class="line">printf(&quot;显示完毕!\n&quot;); </span><br><span class="line">&#125; </span><br><span class="line">/*按职工号删除职工信息*/ </span><br><span class="line">int del(PLINK p,int no) </span><br><span class="line">&#123; </span><br><span class="line">message(); </span><br><span class="line">printf(&quot;按职工号删除职工信息\n&quot;); </span><br><span class="line">while(NULL!=p-&gt;next) </span><br><span class="line">&#123; </span><br><span class="line">if(p-&gt;next-&gt;w.no==no) </span><br><span class="line">&#123; </span><br><span class="line">PLINK q=p-&gt;next; </span><br><span class="line">p-&gt;next=p-&gt;next-&gt;next; </span><br><span class="line">free(q);                    //释放结点</span><br><span class="line">printf(&quot;删除成功!\n&quot;); </span><br><span class="line">return 1; </span><br><span class="line">&#125; </span><br><span class="line">p=p-&gt;next; </span><br><span class="line">&#125; </span><br><span class="line">printf(&quot;没有你输入的职工号!\n&quot;); </span><br><span class="line">return -1; </span><br><span class="line">&#125;</span><br><span class="line">void dell(PLINK p)&#123;//删除全部员工记录</span><br><span class="line">while(NULL!=p-&gt;next)   </span><br><span class="line">&#123; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PLINK q=p-&gt;next; </span><br><span class="line">p-&gt;next=p-&gt;next-&gt;next; </span><br><span class="line">free(q);                    //释放结点</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line">p=p-&gt;next; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main() </span><br><span class="line">&#123; </span><br><span class="line">int cmd=0;/*命令号*/ </span><br><span class="line">int no; </span><br><span class="line">char name[4]; </span><br><span class="line">PLINK pworker; </span><br><span class="line">if(!(pworker=create())) </span><br><span class="line">&#123; </span><br><span class="line">exit(0);/*如果创建职工信息链表表头失败则结束程序*/ </span><br><span class="line">&#125; </span><br><span class="line">while(cmd!=-1) </span><br><span class="line">&#123; </span><br><span class="line">switch(cmd) </span><br><span class="line">&#123; </span><br><span class="line">case 0: </span><br><span class="line">message(); </span><br><span class="line">break; </span><br><span class="line">case 1: </span><br><span class="line">add(pworker); </span><br><span class="line">break; </span><br><span class="line">case 2: </span><br><span class="line">show(pworker); </span><br><span class="line">break; </span><br><span class="line">case 3: </span><br><span class="line">nopai(pworker);</span><br><span class="line">show(pworker);</span><br><span class="line">printf(&quot;按职工号排列成功!\n&quot;);</span><br><span class="line">break; </span><br><span class="line">case 4: </span><br><span class="line">depnopai(pworker);</span><br><span class="line">show(pworker);</span><br><span class="line">printf(&quot;按部门号排列成功!\n&quot;); </span><br><span class="line">break;</span><br><span class="line">case 5: </span><br><span class="line">salarypai(pworker);</span><br><span class="line">show(pworker);</span><br><span class="line">printf(&quot;按工资排列成功!\n&quot;); </span><br><span class="line">break; </span><br><span class="line">case 6: </span><br><span class="line">printf(&quot;请输入要删除的职工号：&quot;); </span><br><span class="line">scanf(&quot;%d&quot;,&amp;no); </span><br><span class="line">del(pworker,no); </span><br><span class="line">show(pworker);</span><br><span class="line">printf(&quot;删除成功!\n&quot;); </span><br><span class="line">break; </span><br><span class="line">case 7: </span><br><span class="line"></span><br><span class="line">dell(pworker);</span><br><span class="line">show(pworker);</span><br><span class="line">printf(&quot;已经删除全部记录!&quot;); </span><br><span class="line">break; </span><br><span class="line"></span><br><span class="line">case 8: </span><br><span class="line">default: </span><br><span class="line">message(); </span><br><span class="line">&#125; </span><br><span class="line">printf(&quot;请输入操作命令数字：\n&quot;); </span><br><span class="line">scanf(&quot;%d&quot;,&amp;cmd);/*接收命令*/ </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">    release(pworker);</span><br><span class="line">return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;主要功能：存储职工的职工号、姓名、部门号、工资，实现职工号、部门号、工资的排序，删除单个职工的记录、删除全部职工的记录。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
      <category term="数据结构 职工管理系统" scheme="https://hongyonghan.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E8%81%8C%E5%B7%A5%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>面试题之String、StringBuffer、StringBuilder有什么区别</title>
    <link href="https://hongyonghan.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BString%E3%80%81StringBuffer%E3%80%81StringBuilder%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/"/>
    <id>https://hongyonghan.github.io/post/面试题之String、StringBuffer、StringBuilder有什么区别/</id>
    <published>2019-07-21T14:03:44.000Z</published>
    <updated>2019-09-05T03:06:56.079Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><strong>String</strong><br>String类底层是字符数组常量，加法操作。<br>String在进行字符串拼接时，会产生大量的垃圾数据，占用内存空间，消耗资源、执行效率是非常慢的。<br><strong>StringBuffer、StringBuild</strong>可以直接给char数组进行赋值，所以不会占用太多空间、而且拼接的效率也是比较快的。<br><strong>StringBuffer</strong>线程安全，执行效率较低。<br><strong>StringBuilder</strong>线程不安全，执行效率最高。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;String&lt;/strong&gt;&lt;br&gt;String类底层是字符数组常量，加法操作。&lt;br&gt;String在进行字符串拼接时，会产生大量的垃圾数据，占用内存空间，消耗资源、执行效率是非常慢的。&lt;br&gt;&lt;strong&gt;Strin
      
    
    </summary>
    
    
      <category term="String StringBuffer StrigBuilder" scheme="https://hongyonghan.github.io/tags/String-StringBuffer-StrigBuilder/"/>
    
  </entry>
  
  <entry>
    <title>JSP连接数据库实现注册登录</title>
    <link href="https://hongyonghan.github.io/post/JSP%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95/"/>
    <id>https://hongyonghan.github.io/post/JSP连接数据库实现注册登录/</id>
    <published>2019-07-21T14:03:44.000Z</published>
    <updated>2019-09-05T03:06:50.047Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><strong>要求</strong><br>tomcat8.0、mysql<br>需要一个mysql的驱动器，放在WEB-INFO的lib。版本号如下：<br><img src="https://img-blog.csdnimg.cn/20190413161405424.png" alt="在这里插入图片描述"><br><strong>数据库文件</strong><br>在mysql数据库中建立一个名字叫db_01的数据库。在数据库的建立一个名字叫tb_user的表，表格的字段为UName,Pwd。</p><p><strong>index.jsp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=&quot;&lt;%=basePath%&gt;&quot;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;title&gt;My JSP&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;    </span><br><span class="line">&lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt;</span><br><span class="line">--&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;font face = &quot;宋体&quot; size = &quot;6&quot; color = &quot;#000&quot;&gt;欢迎JSP&lt;/font&gt;&lt;hr&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;img alt=&quot;&quot; width = &quot;600&quot; height = &quot;400&quot; src=&quot;D:\Images.jpg&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;table width = &quot;200&quot; border =&quot;1&quot; bordercolor = &quot;#00F&quot;&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;!--&lt;td&gt;&lt;input type = &quot;button&quot; value = &quot;登      陆&quot; onclick = &quot;window.location.href(&apos;login.jsp&apos;)&quot;&gt;&lt;/td&gt;---&gt;</span><br><span class="line">  &lt;td&gt;&lt;input type = &quot;button&quot; value = &quot;登      陆&quot; onclick = &quot;window.open(&apos;login.jsp&apos;)&quot;&gt;&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;&lt;input type = &quot;button&quot; value = &quot;注      册&quot; onclick = &quot;window.open(&apos;register.jsp&apos;)&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt; </span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">  &lt;/center&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>login.jsp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=&quot;&lt;%=basePath%&gt;&quot;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;title&gt;My JSP&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line">&lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;    </span><br><span class="line">&lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt;</span><br><span class="line">--&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">  &lt;font face=&quot;楷体&quot; size=&quot;6&quot; color=&quot;#000&quot; &gt;登录界面&lt;/font&gt;</span><br><span class="line">  &lt;%  </span><br><span class="line">    String flag = request.getParameter(&quot;errNo&quot;);  </span><br><span class="line">    try&#123;</span><br><span class="line">         if(flag!=null)</span><br><span class="line">            out.println(&quot;用户名不存在或密码错误&quot;);</span><br><span class="line">    &#125;catch(Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">   %&gt;</span><br><span class="line">  &lt;form action = &quot;loginCh.jsp&quot; method=&quot;post&quot;&gt;</span><br><span class="line">      &lt;table width=&quot;300&quot; height = &quot;180&quot; border=&quot;5&quot; bordercolor=&quot;#A0A0A0&quot;&gt; </span><br><span class="line"> &lt;tr&gt;</span><br><span class="line">   &lt;th&gt;账  户：&lt;/th&gt;</span><br><span class="line">   &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot;  value = &quot;请输入用户名&quot; maxlength = &quot;16&quot; onfocus = &quot;if(this.value == &apos;请输入用户名&apos;) this.value =&apos;&apos;&quot;&gt;&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">   &lt;th&gt;密  码：&lt;/th&gt;</span><br><span class="line">   &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;pwd&quot; maxlength = &quot;20&quot;&gt;&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;td colspan = &quot;2&quot; align = &quot;center&quot;&gt;</span><br><span class="line">     &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;登       录&quot;&gt;</span><br><span class="line">     &lt;input type=&quot;button&quot; value=&quot;返       回&quot;</span><br><span class="line">   onclick=&quot;window.location.href(&apos;/webText&apos;)&quot;&gt;</span><br><span class="line">       &lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">   &lt;/table&gt;</span><br><span class="line"> &lt;/form&gt;</span><br><span class="line">  &lt;/center&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>checkRegister.jsp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*,java.sql.*&quot; pageEncoding=&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=&quot;&lt;%=basePath%&gt;&quot;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;title&gt;My JSP&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line">&lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;    </span><br><span class="line">&lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt;</span><br><span class="line">--&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;%      </span><br><span class="line">            String user = new String(request.getParameter(&quot;username&quot;).getBytes(&quot;ISO-8859-1&quot;),&quot;UTF-8&quot;);  </span><br><span class="line">            String pwd = request.getParameter(&quot;password&quot;);</span><br><span class="line"> </span><br><span class="line">            String driverClass = &quot;com.mysql.jdbc.Driver&quot;;</span><br><span class="line">            String url = &quot;jdbc:mysql://localhost:3306/db_01&quot;;</span><br><span class="line">            String username = &quot;root&quot;;</span><br><span class="line">            String password = &quot;root&quot;;</span><br><span class="line">            Class.forName(driverClass);//加载驱动 </span><br><span class="line">            Connection conn = DriverManager.getConnection(url,username,password);//得到连接</span><br><span class="line">            PreparedStatement pStmt = conn.prepareStatement(&quot;select * from tb_user where UName = &apos;&quot; + user + &quot;&apos;&quot;);</span><br><span class="line">              ResultSet rs = pStmt.executeQuery();</span><br><span class="line">                if(rs.next())&#123;</span><br><span class="line">                    out.println(&quot;&lt;script language=&apos;javascript&apos;&gt;alert(&apos;该用户已存在，请重新注册！&apos;);window.location.href=&apos;register.jsp&apos;;&lt;/script&gt;&quot;);</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    PreparedStatement tmt = conn.prepareStatement(&quot;Insert into tb_user values(&apos;&quot; + user + &quot;&apos;,&apos;&quot; + pwd + &quot;&apos;)&quot;);</span><br><span class="line">                        int rst = tmt.executeUpdate();</span><br><span class="line">                        if (rst != 0)&#123;</span><br><span class="line">                              out.println(&quot;&lt;script language=&apos;javascript&apos;&gt;alert(&apos;用户注册成功！&apos;);window.location.href=&apos;index.jsp&apos;;&lt;/script&gt;&quot;);  </span><br><span class="line">                        &#125;else&#123;</span><br><span class="line">                           out.println(&quot;&lt;script language=&apos;javascript&apos;&gt;alert(&apos;用户注册失败！&apos;);window.location.href=&apos;register.jsp&apos;;&lt;/script&gt;&quot;);  </span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">     %&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>loginCh.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*,java.sql.*&quot; pageEncoding=&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=&quot;&lt;%=basePath%&gt;&quot;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;title&gt;My JSP&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line">&lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;    </span><br><span class="line">&lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt;</span><br><span class="line">--&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;%      </span><br><span class="line">            String user = new String(request.getParameter(&quot;username&quot;).getBytes(&quot;ISO-8859-1&quot;),&quot;UTF-8&quot;);  </span><br><span class="line">            String pwd = request.getParameter(&quot;password&quot;);</span><br><span class="line"> </span><br><span class="line">            String driverClass = &quot;com.mysql.jdbc.Driver&quot;;</span><br><span class="line">            String url = &quot;jdbc:mysql://localhost:3306/db_01&quot;;</span><br><span class="line">            String username = &quot;root&quot;;</span><br><span class="line">            String password = &quot;root&quot;;</span><br><span class="line">            Class.forName(driverClass);//加载驱动 </span><br><span class="line">            Connection conn = DriverManager.getConnection(url,username,password);//得到连接</span><br><span class="line">            PreparedStatement pStmt = conn.prepareStatement(&quot;select * from tb_user where UName = &apos;&quot; + user + &quot;&apos;&quot;);</span><br><span class="line">              ResultSet rs = pStmt.executeQuery();</span><br><span class="line">                if(rs.next())&#123;</span><br><span class="line">                    out.println(&quot;&lt;script language=&apos;javascript&apos;&gt;alert(&apos;该用户已存在，请重新注册！&apos;);window.location.href=&apos;register.jsp&apos;;&lt;/script&gt;&quot;);</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    PreparedStatement tmt = conn.prepareStatement(&quot;Insert into tb_user values(&apos;&quot; + user + &quot;&apos;,&apos;&quot; + pwd + &quot;&apos;)&quot;);</span><br><span class="line">                        int rst = tmt.executeUpdate();</span><br><span class="line">                        if (rst != 0)&#123;</span><br><span class="line">                              out.println(&quot;&lt;script language=&apos;javascript&apos;&gt;alert(&apos;用户注册成功！&apos;);window.location.href=&apos;index.jsp&apos;;&lt;/script&gt;&quot;);  </span><br><span class="line">                        &#125;else&#123;</span><br><span class="line">                           out.println(&quot;&lt;script language=&apos;javascript&apos;&gt;alert(&apos;用户注册失败！&apos;);window.location.href=&apos;register.jsp&apos;;&lt;/script&gt;&quot;);  </span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">     %&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>register.jsp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=&quot;&lt;%=basePath%&gt;&quot;&gt;</span><br><span class="line">    &lt;title&gt;My JSP&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;    </span><br><span class="line">&lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt;</span><br><span class="line">--&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">function addCheck()&#123;</span><br><span class="line">var username=document.getElementById(&quot;username&quot;).value;</span><br><span class="line">var password=document.getElementById(&quot;password&quot;).value;</span><br><span class="line">var newword=document.getElementById(&quot;newword&quot;).value;</span><br><span class="line">if(username==&quot;&quot;)&#123;</span><br><span class="line">alert(&quot;用户名不能为空!&quot;);</span><br><span class="line">document.getElementById(&quot;username&quot;).focus();  </span><br><span class="line">return false;</span><br><span class="line">                &#125;</span><br><span class="line">if(password==&quot;&quot;)&#123;</span><br><span class="line">alert(&quot;密码不能为空!&quot;);</span><br><span class="line"> document.getElementById(&quot;password&quot;).focus();</span><br><span class="line"> return false;</span><br><span class="line"> &#125;</span><br><span class="line">if(password != newword)&#123;</span><br><span class="line">alert(&quot;两次输入密码不相同!&quot;);</span><br><span class="line"> document.getElementById(&quot;newword&quot;).focus();</span><br><span class="line"> return false;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">function validate()&#123;</span><br><span class="line">    var flag = addCheck();</span><br><span class="line">    if(flag == false)</span><br><span class="line">        return false;</span><br><span class="line">    return true;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">&lt;font face=&quot;楷体&quot; size=&quot;6&quot; color=&quot;#000&quot;&gt;注册界面&lt;/font&gt;</span><br><span class="line">&lt;form action = &quot;checkRegister.jsp&quot; method = &quot;post&quot; onsubmit = &quot;return validate()&quot;&gt;</span><br><span class="line">  &lt;table width=&quot;300&quot; height = &quot;180&quot; border=&quot;5&quot; bordercolor=&quot;#A0A0A0&quot;&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">&lt;th&gt;用户名：&lt;/th&gt;</span><br><span class="line">&lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;输入16个字符以内&quot; maxlength = &quot;16&quot; onfocus = &quot;if(this.value == &apos;输入16个字符以内&apos;) this.value =&apos;&apos;&quot;&gt;&lt;/td&gt;</span><br><span class="line">   &lt;/tr&gt;</span><br><span class="line">   &lt;tr&gt;</span><br><span class="line"> &lt;th&gt;输入密码：&lt;/th&gt;</span><br><span class="line"> &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;password&quot; value=&quot;输入20个字符以内&quot; maxlength = &quot;20&quot; onfocus = &quot;if(this.value == &apos;输入20个字符以内&apos;) this.value =&apos;&apos;&quot;&gt;&lt;/td&gt;</span><br><span class="line">   &lt;/tr&gt;</span><br><span class="line">   &lt;tr&gt;</span><br><span class="line"> &lt;th&gt;确认密码：&lt;/th&gt;</span><br><span class="line"> &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;newword&quot; value=&quot;重新输入密码&quot; maxlength = &quot;20&quot; onfocus = &quot;if(this.value == &apos;重新输入密码&apos;) this.value =&apos;&apos;&quot;&gt;&lt;/td&gt;</span><br><span class="line">   &lt;/tr&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line"> &lt;td colspan = &quot;2&quot; align = &quot;center&quot;&gt;</span><br><span class="line">   &lt;input type=&quot;submit&quot; value=&quot;注  册&quot;&gt;    </span><br><span class="line">   &lt;input type=&quot;reset&quot; value=&quot;重  置&quot;&gt;</span><br><span class="line"> &lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;/center&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>success.jsp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=&quot;&lt;%=basePath%&gt;&quot;&gt;</span><br><span class="line">    &lt;title&gt;Feilong_登录成功&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;    </span><br><span class="line">&lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt;</span><br><span class="line">--&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">     String name = new String(request.getParameter(&quot;username&quot;).getBytes(&quot;8859_1&quot;));</span><br><span class="line">     out.println(&quot;欢迎你:&quot; + name);</span><br><span class="line">    %&gt;&lt;br&gt;</span><br><span class="line">    &lt;a href=&quot;login.jsp&quot;&gt;重新登陆&lt;/a&gt;</span><br><span class="line">    &lt;/center&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;要求&lt;/strong&gt;&lt;br&gt;tomcat8.0、mysql&lt;br&gt;需要一个mysql的驱动器，放在WEB-INFO的lib。版本号如下：&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/
      
    
    </summary>
    
    
      <category term="JSP 注册 登录" scheme="https://hongyonghan.github.io/tags/JSP-%E6%B3%A8%E5%86%8C-%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
</feed>
